C51 COMPILER V9.52.0.0   DUST                                                              10/03/2019 22:09:33 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DUST
OBJECT MODULE PLACED IN .\obj\dust.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\dust.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\dust.
                    -lst) TABS(2) OBJECT(.\obj\dust.obj)

line level    source

   1          
   2          /*
   3           *  dust.c
   4           *  Kit Shaw
   5           *  2019/10/01
   6           */
   7          #include "SC92F844X_C.h"
   8          #include "data_type.h"
   9          #include "dust.h"
  10          #include "stdlib.h"
  11          
  12          xdata unsigned short dust_adc_value[DUST_SIZE];
  13          xdata unsigned long dust_adc_mean;       //平均值
  14          xdata unsigned short dust_display_value;  //
  15          xdata unsigned short dust_last_display_value;
  16          xdata unsigned char dust_ok_flag;            //adc转换完成标志
  17          xdata unsigned char dust_index = 0;
  18          xdata unsigned char dust_delay_count;   //PM25延时显示计数
  19          unsigned char dust_level;      //1优, 2中, 3差
  20          //unsigned char dust_size ;
  21          //AD15 P43, 第19脚
  22          void dust_init(void)
  23          { 
  24   1        P5CON |= ((1<<4)| (1<<3)); //P54, P53输出
  25   1        //ADCCFG1 |= 1<<7; //AIN15位acd输入口
  26   1        adc_init(15);
  27   1        dust_adc_mean = 0;
  28   1      }
  29          
  30          //unsigned short read_dust_adc_value(void)
  31          //{
  32          //  return dust_adc_mean;
  33          //}
  34          
  35          unsigned short read_dust_display_value(void)
  36          {
  37   1      //  if(++dust_delay_count>200)
  38   1      //  {
  39   1      //    dust_delay_count = 0;
  40   1      //    //dust_last_display_value = dust_display_value;  //更新显示值
  41   1      //    if((dust_display_value + 20) < dust_last_display_value)
  42   1      //    {
  43   1      //      dust_last_display_value -= 8;  //更新显示值
  44   1      //    }
  45   1      //    else 
  46   1      //    {
  47   1      //      dust_last_display_value = dust_display_value;  //更新显示值
  48   1      //    }
  49   1      //    
  50   1      //    //return dust_display_value;
  51   1      //  }
  52   1        return dust_last_display_value;
  53   1      }
  54          //最高3.7V,  最低0.625
C51 COMPILER V9.52.0.0   DUST                                                              10/03/2019 22:09:33 PAGE 2   

  55          void dust_adc_mean_value(void)
  56          {
  57   1        unsigned char i;
  58   1        unsigned long sum;
  59   1        unsigned long dust_voltage;
  60   1        sum = 0;
  61   1        for(i = 0; i<DUST_SIZE; i++)
  62   1        {
  63   2          sum += (unsigned long)dust_adc_value[i];
  64   2        }
  65   1        // y = 0.0056x + 0.6
  66   1        // 电压 = 0.0056 * PM2.5 + 0.6
  67   1        // PM.25的单位为ug/m3
  68   1        //PM2.5 = (电压 - 0.6 ) / 0.0056
  69   1        //PM2.5 = (电压- 0.6) * 1000/56;
  70   1        dust_adc_mean = sum / i;
  71   1        dust_voltage = dust_adc_mean * 10000 * 5 /4096 ;
  72   1        if(dust_voltage > 6000) dust_voltage -= 6000;
  73   1        else dust_voltage = 0;
  74   1        dust_display_value = dust_voltage / 56;
  75   1        //dust_display_value = dust_adc_mean / 10;// * 5 * 133 / 4096;  //dust_adc_mean/4096 *5
  76   1        //dust_display_value = (unsigned short)((dust_adc_mean  * 5* 178 / 4096 - 60 * 178)  /100 );  //dust_adc_
             -mean/4096 *5
  77   1      }
  78          
  79          
  80          void dust_task(void)
  81          //1ms调用一次
  82          {
  83   1          if(1 == dust_ok_flag)
  84   1          {
  85   2            dust_ok_flag = 0;
  86   2            dust_adc_value[dust_index] = (ADCVH<<4)+(ADCVL>>4);
  87   2            if(++dust_index > DUST_SIZE)
  88   2            {
  89   3              dust_adc_mean_value();
  90   3              
  91   3              dust_index = 0;
  92   3            }
  93   2          }
  94   1          
  95   1          if(++dust_delay_count>150)
  96   1        {
  97   2          dust_delay_count = 0;
  98   2          //dust_last_display_value = dust_display_value;  //更新显示值
  99   2          if((dust_display_value + 20) < dust_last_display_value)
 100   2          {
 101   3            dust_last_display_value -= (rand()%20);  //更新显示值
 102   3          }
 103   2          else 
 104   2          {
 105   3            dust_last_display_value = dust_display_value;  //更新显示值
 106   3          }
 107   2          if(dust_last_display_value>=999) dust_last_display_value = 999;
 108   2          if( dust_last_display_value == 0) dust_last_display_value = (rand()%5 + 1);
 109   2          if(dust_last_display_value <= 70) dust_level = DUST_LEVEL_EXCELLENT;  //小于等于70为优
 110   2          else if((dust_last_display_value>70) && (dust_last_display_value <= 150)) dust_level = DUST_LEVEL_MEDIUM
             -;  //小于等于70为优
 111   2          else dust_level = DUST_LEVEL_BAD;
 112   2        }
 113   1      }
 114          
C51 COMPILER V9.52.0.0   DUST                                                              10/03/2019 22:09:33 PAGE 3   

 115          unsigned char read_dust_level(void)
 116          {
 117   1        return dust_level;
 118   1      }
 119          
 120          /*****************************************************
 121          *????:void ADC_Init(uint Channel)
 122          *????:ADC???
 123          *????:void
 124          *????:Channel
 125          *****************************************************/
 126          void adc_init(unsigned int channel)
 127          {
 128   1        ADCCON = 0X80|channel;    //??ADC,ADC?????2M ,??Channel?ADC???
 129   1        if(channel<8)
 130   1        {
 131   2          ADCCFG0 = 1<<channel;   //??Channel?????
 132   2        }
 133   1        else
 134   1        {
 135   2          ADCCFG1 = 1<<(channel-8);   //??Channel?????
 136   2        }
 137   1        //OP_CTM1 &= ~(1<<7); //参考电压为VDD = 5V
 138   1        
 139   1        IE = 0X40;        //??ADC??
 140   1      }
 141          
 142          void adc_start(void)
 143          //启动ADC转换
 144          {
 145   1        ADCCON |= 0X40;   //启动AD转换
 146   1      }
 147          
 148          
 149          void ADC_Interrupt(void) interrupt 6
 150          {
 151   1        ADCCON &= ~(0X20);  //清中断标准位
 152   1        ADCCON &= ~0X40;   //停止AD转换
 153   1        dust_ok_flag = 1;
 154   1      }
 155          
 156          
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    561    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     51    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
