C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FAN
OBJECT MODULE PLACED IN .\obj\fan.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\fan.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\fan.ls
                    -t) TABS(2) OBJECT(.\obj\fan.obj)

line level    source

   1          
   2          
   3          /*
   4           *fan.c
   5           *Kit Shaw
   6           * 2019.10.2
   7           */
   8           
   9          #include "SC92F844X_C.h"
  10          #include "led.h"
  11          #include "fan.h"
  12          #include "filter.h"
  13          #include "IAP.h"
  14          #include "ion.H"
  15          #include "arom.h"
  16          #include "dust.h"
  17          #include "timing_off.h"
  18          #include "key.h"
  19          
  20          //unsigned int xdata PWMRD_40  _at_  0x740;
  21          //unsigned int xdata PWMRD_41  _at_  0x742;
  22          unsigned int xdata PWMRD_42  _at_  0x744;
  23          //unsigned int xdata PWMRD_43  _at_  0x746;
  24          //unsigned int xdata PWMRD_50  _at_  0x748;
  25          //unsigned int xdata PWMRD_51  _at_  0x74A;
  26          //unsigned int xdata PWMRD_52  _at_  0x74C;
  27          //unsigned int xdata PWMRD_53  _at_  0x74E;
  28          unsigned int xdata fan_pwm_value;
  29          unsigned int xdata fan_pulse_count;
  30          unsigned int xdata PWMRD_Temp;
  31          
  32          
  33          unsigned int    fan_return_pulse_count;  //·ç»ú·µ»ØµÄÂö³åÊý¡£
  34          unsigned int    disp_fan_return_pulse;
  35          unsigned char fan_judge; //ÅÐ¶ÏÊÇ·ñÒªµ÷Õû×ªËÙ
  36          
  37          
  38          unsigned char power_status;
  39          unsigned char fan_speed;  // 0ÖÇÄÜ, 1¾²Òô, 2ÖÐ, 3¸ß
  40          
  41          unsigned char fan_regulate_flag;  // 1Òªµ÷ÕûÁË, 0²»µ÷Õû
  42          
  43          /*
  44          void set_power_status(unsigned char sta)
  45          {
  46            power_status = sta;
  47          }
  48          */
  49          unsigned char read_power_status(void)
  50          {
  51   1        return power_status;
  52   1      }
  53          
  54          void fan_init(void)
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 2   

  55          {
  56   1        fan_speed = FAN_SPEED_AUTO;
  57   1        P0CON &= ~(1<<2);   //P02ÊäÈëÉÏÀ­
  58   1        P0PH |= 1<<2;
  59   1        
  60   1        P1CON &= ~(1<<6);       //P16ÊäÈëÉÏÀ­
  61   1        P1PH |= 1<<6;
  62   1      
  63   1        //INT1F |= 0X40 ;    //xxxx xxxx P16ÏÂ½µÑØÖÐ¶Ï
  64   1        //INT1R &= ~0X40 ;    //xxxx xxxx  0¹Ø±Õ 1Ê¹ÄÜ
  65   1        //IE  |= 0x04;  //0000 0x0x INT1Ê¹ÄÜ
  66   1        //IP |= 0x04;   //INT1µÍÓÅÏÈ¼¶
  67   1      
  68   1        P4CON |= (1<<2) | (1<<4);     // p44, P42Êä³ö
  69   1        P42 = 0;
  70   1        P44 = 0;
  71   1      
  72   1        //PWMCON = 99;           //ÖÜÆÚÉèÖÃµÍ8Î»,50us  20k
  73   1          //PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  74   1        //PWMCON = 199;           //ÖÜÆÚÉèÖÃµÍ8Î»,100us, 10K
  75   1          //PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  76   1        PWMCON = 1000%256;           //ÖÜÆÚÉèÖÃµÍ8Î»,100us, 10K
  77   1          PWMCFG = 0xb3;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  78   1        
  79   1        PWMRD_42 = 0x8000 | 20;
  80   1      }
  81          
  82          
  83          
  84          void fan_pwm_start(void)
  85          {
  86   1        FAN_PC_PIN = 1;
  87   1        //fan_pwm_value = 23;
  88   1        fan_pulse_count = 1;
  89   1        PWMRD_42 |= 0x8000;
  90   1        PWMRD_Temp = 0;
  91   1      }
  92          
  93          //void fan_pwm_stop(void)
  94          //{
  95          //  PWMCON &= 0x7f;
  96          //  FAN_PWM_PIN = 0;
  97          //}
  98          
  99          
 100          /*
 101          void set_fan_speed(unsigned char speed)
 102          {
 103            
 104          }
 105          */
 106          void regulate_fan_speed(void)
 107          //µ÷Õû×ª, µôÓÃÒ»´ÎÇÐ»»Ò»´Î, ×Ô¶¯, µÍ, ÖÐ, ¸ßÒÀ´ÎÑ­»·
 108          {
 109   1        if(++fan_speed> FAN_SPEED_HIGH) fan_speed = FAN_SPEED_AUTO; 
 110   1      }
 111          
 112          unsigned char read_fan_speed(void)
 113          {
 114   1        return fan_speed;
 115   1      }
 116          
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 3   

 117          void fan_task(void)
 118            //10msµ÷ÓÃÒ»´Î
 119          {
 120   1        //unsigned int tmp;
 121   1        //tmp = PWMRD_42 & (~0x8000);
 122   1        if(read_power_status() == POWER_ON_STATUS)
 123   1        {
 124   2      
 125   2          if( (PWMRD_Temp & (~0x8000)) != fan_pulse_count)
 126   2          {
 127   3            if( (PWMRD_Temp & (~0x8000)) < fan_pulse_count)
 128   3            {
 129   4              PWMRD_Temp++;
 130   4            }
 131   3            else PWMRD_Temp--;
 132   3      
 133   3            PWMRD_42 = PWMRD_Temp | 0x8000;
 134   3          }
 135   2      
 136   2          //PWMRD_42 = 20 | 0x8000;
 137   2          
 138   2        }
 139   1        else
 140   1        {
 141   2          if(fan_pulse_count>0)
 142   2                      {
 143   3                          fan_pulse_count--;
 144   3                PWMRD_42 = 0x8000 | fan_pulse_count;                    
 145   3                      }
 146   2                      else
 147   2                      {
 148   3                          fan_pulse_count = 0;
 149   3                          PWMRD_42 &= ~0x8000;
 150   3                          FAN_PWM_PIN = 0;
 151   3                FAN_PC_PIN = 0;
 152   3                      }
 153   2        }
 154   1      }
 155          
 156          #ifdef DEBUG_FAN_RETURN_PULSE
              unsigned int read_disp_fan_return_pulse(void)
              {
                //return  disp_fan_return_pulse;
                return fan_pulse_count;
              }
              
              #endif
 164          
 165          void store_fan_return_pulse(void)
 166            //°Ñµ±Ç°µÄ×ªËÙÖµ´æ´¢ÆðÀ´
 167          {
 168   1        //disp_fan_return_pulse = fan_return_pulse_count;
 169   1        //disp_fan_return_pulse
 170   1        fan_return_pulse_count = (TH0 << 8) + TL0;
 171   1        TH0 = 0;
 172   1        TL0 = 0;
 173   1        fan_regulate_flag = 1; 
 174   1        //fan_return_pulse_count = 0;
 175   1      }
 176          
 177          
 178          void fan_handle(void) 
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 4   

 179            //ÉèÖÃ·ç»úµÄËÙ¶È£¬1sµ÷ÓÃÒ»´Î
 180          {
 181   1        //static unsigned char tmp=0; 
 182   1        if(0 == fan_regulate_flag) return;
 183   1        fan_regulate_flag = 0;
 184   1        disp_fan_return_pulse = fan_return_pulse_count;
 185   1        switch(fan_speed)
 186   1        {
 187   2          case 0: //auto
 188   2            switch(read_dust_level())
 189   2            {
 190   3              case DUST_LEVEL_EXCELLENT: //ÓÅ1ËÙµµ
 191   3                fan_level1_speed_judge();                     
 192   3              break;
 193   3              case DUST_LEVEL_MEDIUM: //ÖÐ2µµ
 194   3                fan_level2_speed_judge();       
 195   3              break;
 196   3              case DUST_LEVEL_BAD: //²î3µ²
 197   3                fan_level3_speed_judge();
 198   3                
 199   3              break;
 200   3              case DUST_LEVEL_12: //²î3µ²
 201   3                fan_level12_speed_judge();
 202   3                
 203   3              break;
 204   3              case DUST_LEVEL_23: //²î3µ²
 205   3                fan_level23_speed_judge();
 206   3                
 207   3              break;
 208   3            }
 209   2          break;
 210   2          case 1:               
 211   2            fan_level1_speed_judge();
 212   2          break;
 213   2          case 2: //
 214   2            fan_level2_speed_judge();
 215   2            /*
 216   2            if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 217   2              {
 218   2                if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 219   2                else fan_judge++;     
 220   2              } else
 221   2              {
 222   2                if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 223   2                {
 224   2                  if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 225   2                else fan_judge--;
 226   2                }
 227   2              else fan_judge = FAN_AUDGE_INIT;      
 228   2              }  
 229   2            */
 230   2          break;
 231   2          case 3:
 232   2            fan_level3_speed_judge();
 233   2            /*
 234   2            if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 235   2              {
 236   2                if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 5   

             -E_VALUE;
 237   2                else fan_judge++;     
 238   2              } else
 239   2              {
 240   2                if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 241   2                {
 242   2                  if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 243   2                else fan_judge--;
 244   2                }
 245   2              else fan_judge = FAN_AUDGE_INIT;      
 246   2              }  
 247   2              */
 248   2          break;
 249   2          default:
 250   2          break;
 251   2        }
 252   1        
 253   1        if(fan_judge>21) 
 254   1        {
 255   2            fan_judge = FAN_AUDGE_INIT;
 256   2          fan_pulse_count++;
 257   2          
 258   2        }
 259   1        if (fan_judge<19) 
 260   1        {
 261   2            fan_judge = FAN_AUDGE_INIT;
 262   2            fan_pulse_count--;
 263   2        }
 264   1        if(fan_pulse_count>500)
 265   1        {   
 266   2          fan_pulse_count = 500;    
 267   2        } 
 268   1        //fan_return_pulse_count = 0;
 269   1      }
 270          
 271          
 272          void fan_level1_speed_judge(void)
 273          //1µµ×ªËÙµ÷Õû
 274          {
 275   1        if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-(CORRECTION_FACTOR + 3)))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý
             -£¬ Ã»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 276   1        //  µÍµµ»Î¶¯µÄÀ÷º¦, ¸ÄCORRECTION_FACTOR+3
 277   1          {
 278   2            if(fan_return_pulse_count <(FAN_LEVEL1_PULSE_COUNT - (CORRECTION_FACTOR_BIGGEST)))
 279   2            {
 280   3              fan_pulse_count += 5;
 281   3            }
 282   2          else if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 283   2          {
 284   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 285   3          }
 286   2            else fan_judge++;     
 287   2        } 
 288   1        else
 289   1          {
 290   2            if(fan_return_pulse_count >(FAN_LEVEL1_PULSE_COUNT + (CORRECTION_FACTOR_BIGGEST + 100)))
 291   2            {
 292   3              fan_pulse_count -= 5;
 293   3            }
 294   2          else if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR))
 295   2            {
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 6   

 296   3              if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_JU
             -DGE_VALUE;
 297   3            else fan_judge--;
 298   3            }
 299   2          else fan_judge = FAN_AUDGE_INIT;      
 300   2         }  
 301   1      }
 302          
 303          void fan_level2_speed_judge(void)
 304          //2µµ×ªËÙµ÷Õû
 305          {
 306   1        if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»´
             -ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 307   1          {
 308   2            if(fan_return_pulse_count <(FAN_LEVEL2_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 309   2            {
 310   3              fan_pulse_count += 5;
 311   3            }
 312   2          else if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 313   2          {
 314   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 315   3          }
 316   2            else fan_judge++;     
 317   2        } 
 318   1        else
 319   1          {
 320   2            if(fan_return_pulse_count >(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 321   2            {
 322   3              fan_pulse_count -= 5;
 323   3            }
 324   2          else if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 325   2            {
 326   3              if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_JU
             -DGE_VALUE;
 327   3            else fan_judge--;
 328   3            }
 329   2          else fan_judge = FAN_AUDGE_INIT;      
 330   2         }  
 331   1      }
 332          
 333          void fan_level3_speed_judge(void)
 334          //1µµ×ªËÙµ÷Õû
 335          {
 336   1        if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»´
             -ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 337   1          {
 338   2            if(fan_return_pulse_count <(FAN_LEVEL3_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 339   2            {
 340   3              fan_pulse_count += 8;
 341   3            }
 342   2          else if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 343   2          {
 344   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 345   3          }
 346   2            else fan_judge++;     
 347   2        } 
 348   1        else
 349   1          {
 350   2            if(fan_return_pulse_count >(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 351   2            {
 352   3              fan_pulse_count -= 5;
 353   3            }
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 7   

 354   2          else if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 355   2            {
 356   3              if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_JU
             -DGE_VALUE;
 357   3            else fan_judge--;
 358   3            }
 359   2          else fan_judge = FAN_AUDGE_INIT;      
 360   2         }  
 361   1      }
 362          
 363          
 364          void fan_level12_speed_judge(void)
 365          {
 366   1        if(fan_return_pulse_count<(FAN_LEVEL12_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»
             -´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 367   1          {
 368   2            if(fan_return_pulse_count <(FAN_LEVEL12_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 369   2            {
 370   3              fan_pulse_count += 5;
 371   3            }
 372   2          else if(fan_return_pulse_count<(FAN_LEVEL12_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 373   2          {
 374   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 375   3          }
 376   2            else fan_judge++;     
 377   2        } 
 378   1        else
 379   1          {
 380   2            if(fan_return_pulse_count >(FAN_LEVEL12_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 381   2            {
 382   3              fan_pulse_count -= 5;
 383   3            }
 384   2          else if(fan_return_pulse_count>(FAN_LEVEL12_PULSE_COUNT + CORRECTION_FACTOR))
 385   2            {
 386   3              if(fan_return_pulse_count>(FAN_LEVEL12_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_J
             -UDGE_VALUE;
 387   3            else fan_judge--;
 388   3            }
 389   2          else fan_judge = FAN_AUDGE_INIT;      
 390   2         } 
 391   1      }
 392          void fan_level23_speed_judge(void)
 393          {
 394   1        if(fan_return_pulse_count<(FAN_LEVEL23_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»
             -´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 395   1          {
 396   2            if(fan_return_pulse_count <(FAN_LEVEL23_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 397   2            {
 398   3              fan_pulse_count += 5;
 399   3            }
 400   2          else if(fan_return_pulse_count<(FAN_LEVEL23_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 401   2          {
 402   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 403   3          }
 404   2            else fan_judge++;     
 405   2        } 
 406   1        else
 407   1          {
 408   2            if(fan_return_pulse_count >(FAN_LEVEL23_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 409   2            {
 410   3              fan_pulse_count -= 5;
 411   3            }
C51 COMPILER V9.52.0.0   FAN                                                               10/08/2019 20:20:30 PAGE 8   

 412   2          else if(fan_return_pulse_count>(FAN_LEVEL23_PULSE_COUNT + CORRECTION_FACTOR))
 413   2            {
 414   3              if(fan_return_pulse_count>(FAN_LEVEL23_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_J
             -UDGE_VALUE;
 415   3            else fan_judge--;
 416   3            }
 417   2          else fan_judge = FAN_AUDGE_INIT;      
 418   2         } 
 419   1      }
 420          
 421          
 422          
 423          void power_on(void)
 424          {
 425   1        power_status = POWER_ON_STATUS;
 426   1        led_on();  //¿ªÏÔÊ¾
 427   1        ion_on();
 428   1        //arom_on();
 429   1        fan_pwm_start();
 430   1        DUST_PWR_PIN = 0;
 431   1        reset_key_no_move_count();
 432   1      }
 433          
 434          void power_off(void)
 435          {
 436   1        
 437   1        power_status = POWER_OFF_STATUS;  
 438   1        ion_off();
 439   1        set_arom_level(0);
 440   1        reset_timing_off_level();
 441   1        //arom_off();
 442   1        led_off();
 443   1        DUST_PWR_PIN = 1;
 444   1        reset_key_no_move_count();
 445   1        write_filter_time();
 446   1        reset_lock_flag();
 447   1      }
 448          
 449          
 450          
 451          
 452          
 453          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1027    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
