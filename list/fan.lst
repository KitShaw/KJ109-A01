C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FAN
OBJECT MODULE PLACED IN .\obj\fan.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\fan.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\fan.ls
                    -t) TABS(2) OBJECT(.\obj\fan.obj)

line level    source

   1          
   2          
   3          /*
   4           *fan.c
   5           *Kit Shaw
   6           * 2019.10.2
   7           */
   8           
   9          #include "SC92F844X_C.h"
  10          #include "led.h"
  11          #include "fan.h"
  12          #include "filter.h"
  13          #include "IAP.h"
  14          #include "ion.H"
  15          #include "arom.h"
  16          #include "dust.h"
  17          #include "timing_off.h"
  18          #include "key.h"
  19          
  20          //unsigned int xdata PWMRD_40  _at_  0x740;
  21          //unsigned int xdata PWMRD_41  _at_  0x742;
  22          unsigned int xdata PWMRD_42  _at_  0x744;
  23          //unsigned int xdata PWMRD_43  _at_  0x746;
  24          //unsigned int xdata PWMRD_50  _at_  0x748;
  25          //unsigned int xdata PWMRD_51  _at_  0x74A;
  26          //unsigned int xdata PWMRD_52  _at_  0x74C;
  27          //unsigned int xdata PWMRD_53  _at_  0x74E;
  28          unsigned int xdata fan_pwm_value;
  29          unsigned int xdata fan_pulse_count;
  30          unsigned int xdata PWMRD_Temp;
  31          
  32          
  33          unsigned int    fan_return_pulse_count;  //·ç»ú·µ»ØµÄÂö³åÊý¡£
  34          unsigned int    disp_fan_return_pulse;
  35          unsigned char fan_judge; //ÅÐ¶ÏÊÇ·ñÒªµ÷Õû×ªËÙ
  36          
  37          
  38          unsigned char power_status;
  39          unsigned char fan_speed;  // 0ÖÇÄÜ, 1¾²Òô, 2ÖÐ, 3¸ß
  40          
  41          unsigned char fan_regulate_flag;  // 1Òªµ÷ÕûÁË, 0²»µ÷Õû
  42          
  43          /*
  44          void set_power_status(unsigned char sta)
  45          {
  46            power_status = sta;
  47          }
  48          */
  49          unsigned char read_power_status(void)
  50          {
  51   1        return power_status;
  52   1      }
  53          
  54          void fan_init(void)
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 2   

  55          {
  56   1        fan_speed = FAN_SPEED_AUTO;
  57   1        P0CON &= ~(1<<2);   //P02ÊäÈëÉÏÀ­
  58   1        P0PH |= 1<<2;
  59   1        
  60   1        //P1CON &= ~(1<<6);       //P16ÊäÈëÉÏÀ­
  61   1        //P1PH |= 1<<6;
  62   1      
  63   1        //INT1F |= 0X40 ;    //xxxx xxxx P16ÏÂ½µÑØÖÐ¶Ï
  64   1        //INT1R &= ~0X40 ;    //xxxx xxxx  0¹Ø±Õ 1Ê¹ÄÜ
  65   1        //IE  |= 0x04;  //0000 0x0x INT1Ê¹ÄÜ
  66   1        //IP |= 0x04;   //INT1µÍÓÅÏÈ¼¶
  67   1      
  68   1        P4CON |= (1<<2) | (1<<4);     // p44, P42Êä³ö
  69   1        P42 = 0;
  70   1        P44 = 0;
  71   1      
  72   1        //PWMCON = 99;           //ÖÜÆÚÉèÖÃµÍ8Î»,50us  20k
  73   1          //PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  74   1        //PWMCON = 199;           //ÖÜÆÚÉèÖÃµÍ8Î»,100us, 10K
  75   1          //PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  76   1        PWMCON = 1000%256;           //ÖÜÆÚÉèÖÃµÍ8Î»,1000us, 1K
  77   1          PWMCFG = 0xb3;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  78   1        
  79   1        PWMRD_42 = 0x8000 | 20;
  80   1      }
  81          
  82          
  83          
  84          void fan_pwm_start(void)
  85          {
  86   1        FAN_PC_PIN = 1;
  87   1        //fan_pwm_value = 23;
  88   1        fan_pulse_count = 1;
  89   1        PWMRD_42 |= 0x8000;
  90   1        PWMRD_Temp = 0;
  91   1      }
  92          
  93          //void fan_pwm_stop(void)
  94          //{
  95          //  PWMCON &= 0x7f;
  96          //  FAN_PWM_PIN = 0;
  97          //}
  98          
  99          
 100          /*
 101          void set_fan_speed(unsigned char speed)
 102          {
 103            
 104          }
 105          */
 106          void regulate_fan_speed(void)
 107          //µ÷Õû×ª, µôÓÃÒ»´ÎÇÐ»»Ò»´Î, ×Ô¶¯, µÍ, ÖÐ, ¸ßÒÀ´ÎÑ­»·
 108          {
 109   1        if(++fan_speed> FAN_SPEED_HIGH) fan_speed = FAN_SPEED_AUTO; 
 110   1      }
 111          
 112          unsigned char read_fan_speed(void)
 113          {
 114   1        return fan_speed;
 115   1      }
 116          
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 3   

 117          void fan_task(void)
 118            //10msµ÷ÓÃÒ»´Î
 119          {
 120   1        //unsigned int tmp;
 121   1        //tmp = PWMRD_42 & (~0x8000);
 122   1        if(read_power_status() == POWER_ON_STATUS)
 123   1        {
 124   2      
 125   2          if( (PWMRD_Temp & (~0x8000)) != fan_pulse_count)
 126   2          {
 127   3            if( (PWMRD_Temp & (~0x8000)) < fan_pulse_count)
 128   3            {
 129   4              PWMRD_Temp++;
 130   4            }
 131   3            else PWMRD_Temp--;
 132   3      
 133   3            PWMRD_42 = PWMRD_Temp | 0x8000;
 134   3          }
 135   2      
 136   2          //PWMRD_42 = 20 | 0x8000;
 137   2          
 138   2        }
 139   1        else
 140   1        {
 141   2          if(fan_pulse_count>0)
 142   2                      {
 143   3                          fan_pulse_count--;
 144   3                PWMRD_42 = 0x8000 | fan_pulse_count;                    
 145   3                      }
 146   2                      else
 147   2                      {
 148   3                          fan_pulse_count = 0;
 149   3                          PWMRD_42 &= ~0x8000;
 150   3                          FAN_PWM_PIN = 0;
 151   3                FAN_PC_PIN = 0;
 152   3                      }
 153   2        }
 154   1      }
 155          
 156          #ifdef DEBUG_FAN_RETURN_PULSE
              unsigned int read_disp_fan_return_pulse(void)
              {
                return  disp_fan_return_pulse;
                //return fan_pulse_count;
              }
              
              #endif
 164          
 165          void store_fan_return_pulse(void)
 166            //°Ñµ±Ç°µÄ×ªËÙÖµ´æ´¢ÆðÀ´
 167          {
 168   1        //disp_fan_return_pulse = fan_return_pulse_count;
 169   1        //disp_fan_return_pulse
 170   1        fan_return_pulse_count = (TH0 << 8) + TL0;
 171   1        TH0 = 0;
 172   1        TL0 = 0;
 173   1        fan_regulate_flag = 1; 
 174   1        //fan_return_pulse_count = 0;
 175   1      }
 176          
 177          
 178          void fan_handle(void) 
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 4   

 179            //ÉèÖÃ·ç»úµÄËÙ¶È£¬1sµ÷ÓÃÒ»´Î
 180          {
 181   1        //static unsigned char tmp=0; 
 182   1        if(0 == fan_regulate_flag) return;
 183   1        fan_regulate_flag = 0;
 184   1        disp_fan_return_pulse = fan_return_pulse_count;
 185   1        switch(fan_speed)
 186   1        {
 187   2          case 0: //auto
 188   2            switch(read_dust_level())
 189   2            {
 190   3              case DUST_LEVEL_EXCELLENT: //ÓÅ1ËÙµµ
 191   3                fan_level1_speed_judge();                     
 192   3              break;
 193   3              case DUST_LEVEL_MEDIUM: //ÖÐ2µµ
 194   3                fan_level2_speed_judge();       
 195   3              break;
 196   3              case DUST_LEVEL_BAD: //²î3µ²
 197   3                fan_level3_speed_judge();
 198   3                
 199   3              break;
 200   3              case DUST_LEVEL_12: //²î3µ²
 201   3                //fan_level12_speed_judge();
 202   3                fan_level2_speed_judge(); 
 203   3              break;
 204   3              case DUST_LEVEL_23: //²î3µ²
 205   3                //fan_level23_speed_judge();
 206   3                fan_level2_speed_judge(); 
 207   3              break;
 208   3            }
 209   2          break;
 210   2          case 1:               
 211   2            fan_level1_speed_judge();
 212   2          break;
 213   2          case 2: //
 214   2            fan_level2_speed_judge();
 215   2            /*
 216   2            if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 217   2              {
 218   2                if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 219   2                else fan_judge++;     
 220   2              } else
 221   2              {
 222   2                if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 223   2                {
 224   2                  if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 225   2                else fan_judge--;
 226   2                }
 227   2              else fan_judge = FAN_AUDGE_INIT;      
 228   2              }  
 229   2            */
 230   2          break;
 231   2          case 3:
 232   2            fan_level3_speed_judge();
 233   2            /*
 234   2            if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 235   2              {
 236   2                if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 5   

             -E_VALUE;
 237   2                else fan_judge++;     
 238   2              } else
 239   2              {
 240   2                if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 241   2                {
 242   2                  if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 243   2                else fan_judge--;
 244   2                }
 245   2              else fan_judge = FAN_AUDGE_INIT;      
 246   2              }  
 247   2              */
 248   2          break;
 249   2          default:
 250   2          break;
 251   2        }
 252   1        
 253   1        if(fan_judge>25) 
 254   1        {
 255   2            fan_judge = FAN_AUDGE_INIT;
 256   2          fan_pulse_count++;
 257   2          
 258   2        }
 259   1        if (fan_judge<15) 
 260   1        {
 261   2            fan_judge = FAN_AUDGE_INIT;
 262   2            fan_pulse_count--;
 263   2        }
 264   1        if(fan_pulse_count>800)
 265   1        {   
 266   2          fan_pulse_count = 800;    
 267   2        } 
 268   1        //fan_return_pulse_count = 0;
 269   1      }
 270          
 271          
 272          void fan_level1_speed_judge(void)
 273          //1µµ×ªËÙµ÷Õû
 274          {
 275   1        //fan_pulse_count = 52;
 276   1        //fan_judge = FAN_AUDGE_INIT;
 277   1        //return;
 278   1        if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-(CORRECTION_FACTOR + 3)))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý
             -£¬ Ã»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 279   1        //  µÍµµ»Î¶¯µÄÀ÷º¦, ¸ÄCORRECTION_FACTOR+3
 280   1          {
 281   2            if(fan_return_pulse_count <(FAN_LEVEL1_PULSE_COUNT - (CORRECTION_FACTOR_BIGGEST)))
 282   2            {
 283   3              fan_pulse_count += 20;
 284   3            }
 285   2          else if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 286   2          {
 287   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 288   3          }
 289   2            else fan_judge++;     
 290   2        } 
 291   1        else
 292   1          {
 293   2            if(fan_return_pulse_count >(FAN_LEVEL1_PULSE_COUNT + (CORRECTION_FACTOR_BIGGEST + 100)))
 294   2            {
 295   3              fan_pulse_count -= 20;
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 6   

 296   3            }
 297   2          else if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR))
 298   2            {
 299   3              if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_JU
             -DGE_VALUE;
 300   3            else fan_judge--;
 301   3            }
 302   2          else fan_judge = FAN_AUDGE_INIT;      
 303   2         }  
 304   1      }
 305          
 306          void fan_level2_speed_judge(void)
 307          //2µµ×ªËÙµ÷Õû
 308          {
 309   1        //fan_pulse_count = 259;
 310   1        //fan_judge = FAN_AUDGE_INIT;
 311   1        //return;
 312   1        if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»´
             -ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 313   1          {
 314   2            if(fan_return_pulse_count <(FAN_LEVEL2_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 315   2            {
 316   3              fan_pulse_count += 20;
 317   3            }
 318   2          else if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 319   2          {
 320   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 321   3          }
 322   2            else fan_judge++;     
 323   2        } 
 324   1        else
 325   1          {
 326   2            if(fan_return_pulse_count >(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 327   2            {
 328   3              fan_pulse_count -= 20;
 329   3            }
 330   2          else if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 331   2            {
 332   3              if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_JU
             -DGE_VALUE;
 333   3            else fan_judge--;
 334   3            }
 335   2          else fan_judge = FAN_AUDGE_INIT;      
 336   2         }  
 337   1      }
 338          
 339          void fan_level3_speed_judge(void)
 340          //1µµ×ªËÙµ÷Õû
 341          {
 342   1        //fan_pulse_count = 560;
 343   1        //fan_judge = FAN_AUDGE_INIT;
 344   1        //return;
 345   1        if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»´
             -ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 346   1          {
 347   2            if(fan_return_pulse_count <(FAN_LEVEL3_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 348   2            {
 349   3              fan_pulse_count += 20;
 350   3            }
 351   2          else if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 352   2          {
 353   3            fan_judge += FAN_MUST_JUDGE_VALUE;
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 7   

 354   3          }
 355   2            else fan_judge++;     
 356   2        } 
 357   1        else
 358   1          {
 359   2            if(fan_return_pulse_count >(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 360   2            {
 361   3              fan_pulse_count -= 20;
 362   3            }
 363   2          else if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 364   2            {
 365   3              if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_JU
             -DGE_VALUE;
 366   3            else fan_judge--;
 367   3            }
 368   2          else fan_judge = FAN_AUDGE_INIT;      
 369   2         }  
 370   1      }
 371          
 372          
 373          void fan_level12_speed_judge(void)
 374          {
 375   1        if(fan_return_pulse_count<(FAN_LEVEL12_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»
             -´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 376   1          {
 377   2            if(fan_return_pulse_count <(FAN_LEVEL12_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 378   2            {
 379   3              fan_pulse_count += 20;
 380   3            }
 381   2          else if(fan_return_pulse_count<(FAN_LEVEL12_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 382   2          {
 383   3            fan_judge += FAN_MUST_JUDGE_VALUE;
 384   3          }
 385   2            else fan_judge++;     
 386   2        } 
 387   1        else
 388   1          {
 389   2            if(fan_return_pulse_count >(FAN_LEVEL12_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 390   2            {
 391   3              fan_pulse_count -= 20;
 392   3            }
 393   2          else if(fan_return_pulse_count>(FAN_LEVEL12_PULSE_COUNT + CORRECTION_FACTOR))
 394   2            {
 395   3              if(fan_return_pulse_count>(FAN_LEVEL12_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_J
             -UDGE_VALUE;
 396   3            else fan_judge--;
 397   3            }
 398   2          else fan_judge = FAN_AUDGE_INIT;      
 399   2         } 
 400   1      }
 401          void fan_level23_speed_judge(void)
 402          {
 403   1        if(fan_return_pulse_count<(FAN_LEVEL23_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã»
             -´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 404   1          {
 405   2            if(fan_return_pulse_count <(FAN_LEVEL23_PULSE_COUNT - CORRECTION_FACTOR_BIGGEST))
 406   2            {
 407   3              fan_pulse_count += 20;
 408   3            }
 409   2          else if(fan_return_pulse_count<(FAN_LEVEL23_PULSE_COUNT-CORRECTION_FACTOR_BIG))
 410   2          {
 411   3            fan_judge += FAN_MUST_JUDGE_VALUE;
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 8   

 412   3          }
 413   2            else fan_judge++;     
 414   2        } 
 415   1        else
 416   1          {
 417   2            if(fan_return_pulse_count >(FAN_LEVEL23_PULSE_COUNT + CORRECTION_FACTOR_BIGGEST))
 418   2            {
 419   3              fan_pulse_count -= 20;
 420   3            }
 421   2          else if(fan_return_pulse_count>(FAN_LEVEL23_PULSE_COUNT + CORRECTION_FACTOR))
 422   2            {
 423   3              if(fan_return_pulse_count>(FAN_LEVEL23_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_J
             -UDGE_VALUE;
 424   3            else fan_judge--;
 425   3            }
 426   2          else fan_judge = FAN_AUDGE_INIT;      
 427   2         } 
 428   1      }
 429          
 430          
 431          
 432          void power_on(void)
 433          {
 434   1        power_status = POWER_ON_STATUS;
 435   1        led_on();  //¿ªÏÔÊ¾
 436   1        ion_on();
 437   1        //arom_on();
 438   1        fan_pwm_start();
 439   1        DUST_PWR_PIN = 0;
 440   1        reset_key_no_move_count();
 441   1        fan_speed = 0;
 442   1        led_key_on();
 443   1      }
 444          
 445          void power_off(void)
 446          {
 447   1        
 448   1        power_status = POWER_OFF_STATUS;  
 449   1        ion_off();
 450   1        set_arom_level(0);
 451   1        reset_timing_off_level();
 452   1        //arom_off();
 453   1        led_off();
 454   1        DUST_PWR_PIN = 1;
 455   1        reset_key_no_move_count();
 456   1        write_filter_time();
 457   1        reset_lock_flag();
 458   1      }
 459          
 460          
 461          
 462          
 463          
 464          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1021    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
C51 COMPILER V9.52.0.0   FAN                                                               10/23/2019 21:44:14 PAGE 9   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
