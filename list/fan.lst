C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 18:20:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FAN
OBJECT MODULE PLACED IN .\obj\fan.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\fan.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\fan.ls
                    -t) TABS(2) OBJECT(.\obj\fan.obj)

line level    source

   1          
   2          
   3          /*
   4           *fan.c
   5           *Kit Shaw
   6           * 2019.10.2
   7           */
   8           
   9          #include "SC92F844X_C.h"
  10          #include "led.h"
  11          #include "fan.h"
  12          #include "filter.h"
  13          #include "IAP.h"
  14          #include "ion.H"
  15          
  16          //unsigned int xdata PWMRD_40  _at_  0x740;
  17          //unsigned int xdata PWMRD_41  _at_  0x742;
  18          unsigned int xdata PWMRD_42  _at_  0x744;
  19          //unsigned int xdata PWMRD_43  _at_  0x746;
  20          //unsigned int xdata PWMRD_50  _at_  0x748;
  21          //unsigned int xdata PWMRD_51  _at_  0x74A;
  22          //unsigned int xdata PWMRD_52  _at_  0x74C;
  23          //unsigned int xdata PWMRD_53  _at_  0x74E;
  24          unsigned int xdata fan_pwm_value;
  25          unsigned int xdata fan_pulse_count;
  26          unsigned int xdata PWMRD_Temp;
  27          
  28          
  29          unsigned int    fan_return_pulse_count;  //·ç»ú·µ»ØµÄÂö³åÊý¡£
  30          unsigned int    disp_fan_return_pulse;
  31          unsigned char fan_judge; //ÅÐ¶ÏÊÇ·ñÒªµ÷Õû×ªËÙ
  32          
  33          
  34          unsigned char power_status;
  35          unsigned char fan_speed;  // 0ÖÇÄÜ, 1¾²Òô, 2ÖÐ, 3¸ß
  36          
  37          /*
  38          void set_power_status(unsigned char sta)
  39          {
  40            power_status = sta;
  41          }
  42          */
  43          unsigned char read_power_status(void)
  44          {
  45   1        return power_status;
  46   1      }
  47          
  48          void fan_init(void)
  49          {
  50   1        fan_speed = FAN_SPEED_AUTO;
  51   1        P0CON &= ~(1<<2);   //P02ÊäÈëÉÏÀ­
  52   1        P0PH |= 1<<2;
  53   1        
  54   1        P1CON &= ~(1<<6);       //P16ÊäÈëÉÏÀ­
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 18:20:50 PAGE 2   

  55   1        P1PH |= 1<<6;
  56   1      
  57   1        INT1F |= 0X40 ;    //xxxx xxxx P16ÏÂ½µÑØÖÐ¶Ï
  58   1        INT1R &= ~0X40 ;    //xxxx xxxx  0¹Ø±Õ 1Ê¹ÄÜ
  59   1        //IE1 = 1;
  60   1        IE  |= 0x04;  //0000 0x0x INT1Ê¹ÄÜ
  61   1        //IP &= ~0x04;   //INT1µÍÓÅÏÈ¼¶
  62   1        IP |= 0x04;   //INT1µÍÓÅÏÈ¼¶
  63   1        //IE1 |= 0x08;  //0000 x000  INT2Ê¹ÄÜ
  64   1      
  65   1        P4CON |= (1<<2) | (1<<4);     // p44, P42Êä³ö
  66   1        P42 = 0;
  67   1        P44 = 0;
  68   1      
  69   1        //ÉèÖÃÁËÖÜÆÚÎª200us£¬Õ¼¿Õ±ÈÎª50%µÄPWM²¨ÐÎ
  70   1        PWMCON = 99;           //ÖÜÆÚÉèÖÃµÍ8Î»,200us
  71   1          PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  72   1        //PWMRD_Temp = 0x8000 | 50;     //PWMµÄÕ¼¿Õ±Èµ÷½Ú¼Ä´æÖ»¿ÉÐ´,ËùÒÔ¿É½èÓÃ±äÁ¿PWMRD_tempÀ´¶ÁÐ´Õ¼¿Õ±ÈµÄÖµ
  73   1        //PWMRD_41 = PWMRD_Temp;
  74   1        PWMRD_42 = 0x8000 | 20;
  75   1        //ENP42 = 1;
  76   1      }
  77          
  78          
  79          
  80          void fan_pwm_start(void)
  81          {
  82   1        FAN_PC_PIN = 1;
  83   1        fan_pwm_value = 11;
  84   1        PWMRD_42 |= 0x8000;
  85   1        PWMRD_Temp = 0;
  86   1      }
  87          
  88          //void fan_pwm_stop(void)
  89          //{
  90          //  PWMCON &= 0x7f;
  91          //  FAN_PWM_PIN = 0;
  92          //}
  93          
  94          
  95          /*
  96          void set_fan_speed(unsigned char speed)
  97          {
  98            
  99          }
 100          */
 101          void regulate_fan_speed(void)
 102          //µ÷Õû×ª, µôÓÃÒ»´ÎÇÐ»»Ò»´Î, ×Ô¶¯, µÍ, ÖÐ, ¸ßÒÀ´ÎÑ­»·
 103          {
 104   1        if(++fan_speed> FAN_SPEED_HIGH) fan_speed = FAN_SPEED_AUTO; 
 105   1      }
 106          
 107          unsigned char read_fan_speed(void)
 108          {
 109   1        return fan_speed;
 110   1      }
 111          
 112          void fan_task(void)
 113            //10msµ÷ÓÃÒ»´Î
 114          {
 115   1        //unsigned int tmp;
 116   1        //tmp = PWMRD_42 & (~0x8000);
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 18:20:50 PAGE 3   

 117   1        if(read_power_status() == POWER_ON_STATUS)
 118   1        {
 119   2      
 120   2          if( (PWMRD_Temp & (~0x8000)) != fan_pwm_value)
 121   2          {
 122   3            if( (PWMRD_Temp & (~0x8000)) < fan_pwm_value)
 123   3            {
 124   4              PWMRD_Temp++;
 125   4            }
 126   3            else PWMRD_Temp--;
 127   3      
 128   3            PWMRD_42 = PWMRD_Temp | 0x8000;
 129   3          }
 130   2      
 131   2          //PWMRD_42 = 20 | 0x8000;
 132   2          
 133   2        }
 134   1        else
 135   1        {
 136   2          if(fan_pwm_value>0)
 137   2                      {
 138   3                          fan_pwm_value--;
 139   3                PWMRD_42 = 0x8000 | fan_pwm_value;                    
 140   3                      }
 141   2                      else
 142   2                      {
 143   3                          fan_pwm_value = 0;
 144   3                          PWMRD_42 &= ~0x8000;
 145   3                          FAN_PWM_PIN = 0;
 146   3                FAN_PC_PIN = 0;
 147   3                      }
 148   2        }
 149   1      }
 150          
 151          unsigned int read_disp_fan_return_pulse(void)
 152          {
 153   1        return disp_fan_return_pulse;
 154   1      }
 155          
 156          void store_fan_return_pulse(void)
 157            //°Ñµ±Ç°µÄ×ªËÙÖµ´æ´¢ÆðÀ´
 158          {
 159   1        disp_fan_return_pulse = fan_return_pulse_count;
 160   1        fan_return_pulse_count = 0;
 161   1      }
 162          
 163          
 164          void fan_handle(void)  
 165            //ÉèÖÃ·ç»úµÄËÙ¶È£¬1sµ÷ÓÃÒ»´Î
 166          {
 167   1        //static unsigned char tmp=0; 
 168   1        disp_fan_return_pulse = fan_return_pulse_count;
 169   1        switch(fan_speed)
 170   1        {
 171   2          case 0: //auto
 172   2      
 173   2          break;
 174   2          case 1:
 175   2            
 176   2            if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 177   2              {
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 18:20:50 PAGE 4   

 178   3                if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 179   3                else fan_judge++;     
 180   3              } else
 181   2              {
 182   3                if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR))
 183   3                {
 184   4                  if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 185   4                else fan_judge--;
 186   4                }
 187   3              else fan_judge = FAN_AUDGE_INIT;      
 188   3              }       
 189   2            
 190   2          break;
 191   2          case 2: //
 192   2          
 193   2            if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 194   2              {
 195   3                if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 196   3                else fan_judge++;     
 197   3              } else
 198   2              {
 199   3                if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 200   3                {
 201   4                  if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 202   4                else fan_judge--;
 203   4                }
 204   3              else fan_judge = FAN_AUDGE_INIT;      
 205   3              }  
 206   2            
 207   2          break;
 208   2          case 3:
 209   2            
 210   2            if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 211   2              {
 212   3                if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 213   3                else fan_judge++;     
 214   3              } else
 215   2              {
 216   3                if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 217   3                {
 218   4                  if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 219   4                else fan_judge--;
 220   4                }
 221   3              else fan_judge = FAN_AUDGE_INIT;      
 222   3              }  
 223   2          break;
 224   2          default:
 225   2          break;
 226   2        }
 227   1        
 228   1        if(fan_judge>21) 
 229   1        {
 230   2            fan_judge = FAN_AUDGE_INIT;
 231   2          fan_pulse_count++;
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 18:20:50 PAGE 5   

 232   2          
 233   2        }
 234   1        if (fan_judge<19) 
 235   1        {
 236   2            fan_judge = FAN_AUDGE_INIT;
 237   2            fan_pulse_count--;
 238   2        }
 239   1        if(fan_pulse_count>90)
 240   1        {   
 241   2          fan_pulse_count = 90;   
 242   2        } 
 243   1        fan_return_pulse_count = 0;
 244   1      }
 245          
 246          
 247          void power_on(void)
 248          {
 249   1        power_status = POWER_ON_STATUS;
 250   1      //  FAN_POWER_PIN = 1;
 251   1        //fan_pwm_start();
 252   1      //  set_fan_speed(1);
 253   1        //fan_pwm_value = 20;
 254   1        led_on();  //¿ªÏÔÊ¾
 255   1        ion_on();
 256   1        fan_pwm_start();
 257   1      }
 258          
 259          void power_off(void)
 260          {
 261   1        
 262   1        power_status = POWER_OFF_STATUS;  
 263   1        //FAN_POWER_PIN = 0;
 264   1        //fan_pwm_stop();
 265   1        ion_off();
 266   1        led_off();
 267   1      }
 268          
 269          
 270          void EX1() interrupt  2
 271          {
 272   1        //P52 = ~P52;
 273   1        
 274   1        if(P16 == 0)
 275   1        {
 276   2          //P51 = ~P51;
 277   2          fan_return_pulse_count++;
 278   2        }
 279   1        
 280   1      }
 281          
 282          
 283          
 284          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    568    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 18:20:50 PAGE 6   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
