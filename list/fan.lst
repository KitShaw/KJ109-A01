C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 19:52:28 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FAN
OBJECT MODULE PLACED IN .\obj\fan.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\fan.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\fan.ls
                    -t) TABS(2) OBJECT(.\obj\fan.obj)

line level    source

   1          
   2          
   3          /*
   4           *fan.c
   5           *Kit Shaw
   6           * 2019.10.2
   7           */
   8           
   9          #include "SC92F844X_C.h"
  10          #include "led.h"
  11          #include "fan.h"
  12          #include "filter.h"
  13          #include "IAP.h"
  14          #include "ion.H"
  15          #include "dust.h"
  16          
  17          //unsigned int xdata PWMRD_40  _at_  0x740;
  18          //unsigned int xdata PWMRD_41  _at_  0x742;
  19          unsigned int xdata PWMRD_42  _at_  0x744;
  20          //unsigned int xdata PWMRD_43  _at_  0x746;
  21          //unsigned int xdata PWMRD_50  _at_  0x748;
  22          //unsigned int xdata PWMRD_51  _at_  0x74A;
  23          //unsigned int xdata PWMRD_52  _at_  0x74C;
  24          //unsigned int xdata PWMRD_53  _at_  0x74E;
  25          unsigned int xdata fan_pwm_value;
  26          unsigned int xdata fan_pulse_count;
  27          unsigned int xdata PWMRD_Temp;
  28          
  29          
  30          unsigned int    fan_return_pulse_count;  //·ç»ú·µ»ØµÄÂö³åÊý¡£
  31          unsigned int    disp_fan_return_pulse;
  32          unsigned char fan_judge; //ÅÐ¶ÏÊÇ·ñÒªµ÷Õû×ªËÙ
  33          
  34          
  35          unsigned char power_status;
  36          unsigned char fan_speed;  // 0ÖÇÄÜ, 1¾²Òô, 2ÖÐ, 3¸ß
  37          
  38          /*
  39          void set_power_status(unsigned char sta)
  40          {
  41            power_status = sta;
  42          }
  43          */
  44          unsigned char read_power_status(void)
  45          {
  46   1        return power_status;
  47   1      }
  48          
  49          void fan_init(void)
  50          {
  51   1        fan_speed = FAN_SPEED_AUTO;
  52   1        P0CON &= ~(1<<2);   //P02ÊäÈëÉÏÀ­
  53   1        P0PH |= 1<<2;
  54   1        
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 19:52:28 PAGE 2   

  55   1        P1CON &= ~(1<<6);       //P16ÊäÈëÉÏÀ­
  56   1        P1PH |= 1<<6;
  57   1      
  58   1        //INT1F |= 0X40 ;    //xxxx xxxx P16ÏÂ½µÑØÖÐ¶Ï
  59   1        //INT1R &= ~0X40 ;    //xxxx xxxx  0¹Ø±Õ 1Ê¹ÄÜ
  60   1        //IE  |= 0x04;  //0000 0x0x INT1Ê¹ÄÜ
  61   1        //IP |= 0x04;   //INT1µÍÓÅÏÈ¼¶
  62   1      
  63   1        P4CON |= (1<<2) | (1<<4);     // p44, P42Êä³ö
  64   1        P42 = 0;
  65   1        P44 = 0;
  66   1      
  67   1        //ÉèÖÃÁËÖÜÆÚÎª200us£¬Õ¼¿Õ±ÈÎª50%µÄPWM²¨ÐÎ
  68   1        PWMCON = 99;           //ÖÜÆÚÉèÖÃµÍ8Î»,200us
  69   1          PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  70   1        //PWMRD_Temp = 0x8000 | 50;     //PWMµÄÕ¼¿Õ±Èµ÷½Ú¼Ä´æÖ»¿ÉÐ´,ËùÒÔ¿É½èÓÃ±äÁ¿PWMRD_tempÀ´¶ÁÐ´Õ¼¿Õ±ÈµÄÖµ
  71   1        //PWMRD_41 = PWMRD_Temp;
  72   1        PWMRD_42 = 0x8000 | 20;
  73   1        //ENP42 = 1;
  74   1      }
  75          
  76          
  77          
  78          void fan_pwm_start(void)
  79          {
  80   1        FAN_PC_PIN = 1;
  81   1        fan_pwm_value = 11;
  82   1        PWMRD_42 |= 0x8000;
  83   1        PWMRD_Temp = 0;
  84   1      }
  85          
  86          //void fan_pwm_stop(void)
  87          //{
  88          //  PWMCON &= 0x7f;
  89          //  FAN_PWM_PIN = 0;
  90          //}
  91          
  92          
  93          /*
  94          void set_fan_speed(unsigned char speed)
  95          {
  96            
  97          }
  98          */
  99          void regulate_fan_speed(void)
 100          //µ÷Õû×ª, µôÓÃÒ»´ÎÇÐ»»Ò»´Î, ×Ô¶¯, µÍ, ÖÐ, ¸ßÒÀ´ÎÑ­»·
 101          {
 102   1        if(++fan_speed> FAN_SPEED_HIGH) fan_speed = FAN_SPEED_AUTO; 
 103   1      }
 104          
 105          unsigned char read_fan_speed(void)
 106          {
 107   1        return fan_speed;
 108   1      }
 109          
 110          void fan_task(void)
 111            //10msµ÷ÓÃÒ»´Î
 112          {
 113   1        //unsigned int tmp;
 114   1        //tmp = PWMRD_42 & (~0x8000);
 115   1        if(read_power_status() == POWER_ON_STATUS)
 116   1        {
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 19:52:28 PAGE 3   

 117   2      
 118   2          if( (PWMRD_Temp & (~0x8000)) != fan_pwm_value)
 119   2          {
 120   3            if( (PWMRD_Temp & (~0x8000)) < fan_pwm_value)
 121   3            {
 122   4              PWMRD_Temp++;
 123   4            }
 124   3            else PWMRD_Temp--;
 125   3      
 126   3            PWMRD_42 = PWMRD_Temp | 0x8000;
 127   3          }
 128   2      
 129   2          //PWMRD_42 = 20 | 0x8000;
 130   2          
 131   2        }
 132   1        else
 133   1        {
 134   2          if(fan_pwm_value>0)
 135   2                      {
 136   3                          fan_pwm_value--;
 137   3                PWMRD_42 = 0x8000 | fan_pwm_value;                    
 138   3                      }
 139   2                      else
 140   2                      {
 141   3                          fan_pwm_value = 0;
 142   3                          PWMRD_42 &= ~0x8000;
 143   3                          FAN_PWM_PIN = 0;
 144   3                FAN_PC_PIN = 0;
 145   3                      }
 146   2        }
 147   1      }
 148          
 149          unsigned int read_disp_fan_return_pulse(void)
 150          {
 151   1        return disp_fan_return_pulse;
 152   1      }
 153          
 154          void store_fan_return_pulse(void)
 155            //°Ñµ±Ç°µÄ×ªËÙÖµ´æ´¢ÆðÀ´
 156          {
 157   1        disp_fan_return_pulse = fan_return_pulse_count;
 158   1        fan_return_pulse_count = 0;
 159   1      }
 160          
 161          
 162          void fan_handle(void)  
 163            //ÉèÖÃ·ç»úµÄËÙ¶È£¬1sµ÷ÓÃÒ»´Î
 164          {
 165   1        //static unsigned char tmp=0; 
 166   1        disp_fan_return_pulse = fan_return_pulse_count;
 167   1        switch(fan_speed)
 168   1        {
 169   2          case 0: //auto
 170   2      
 171   2          break;
 172   2          case 1:
 173   2            
 174   2            if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 175   2              {
 176   3                if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 19:52:28 PAGE 4   

 177   3                else fan_judge++;     
 178   3              } else
 179   2              {
 180   3                if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR))
 181   3                {
 182   4                  if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 183   4                else fan_judge--;
 184   4                }
 185   3              else fan_judge = FAN_AUDGE_INIT;      
 186   3              }       
 187   2            
 188   2          break;
 189   2          case 2: //
 190   2          
 191   2            if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 192   2              {
 193   3                if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 194   3                else fan_judge++;     
 195   3              } else
 196   2              {
 197   3                if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 198   3                {
 199   4                  if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 200   4                else fan_judge--;
 201   4                }
 202   3              else fan_judge = FAN_AUDGE_INIT;      
 203   3              }  
 204   2            
 205   2          break;
 206   2          case 3:
 207   2            
 208   2            if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 209   2              {
 210   3                if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 211   3                else fan_judge++;     
 212   3              } else
 213   2              {
 214   3                if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 215   3                {
 216   4                  if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 217   4                else fan_judge--;
 218   4                }
 219   3              else fan_judge = FAN_AUDGE_INIT;      
 220   3              }  
 221   2          break;
 222   2          default:
 223   2          break;
 224   2        }
 225   1        
 226   1        if(fan_judge>21) 
 227   1        {
 228   2            fan_judge = FAN_AUDGE_INIT;
 229   2          fan_pulse_count++;
 230   2          
 231   2        }
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 19:52:28 PAGE 5   

 232   1        if (fan_judge<19) 
 233   1        {
 234   2            fan_judge = FAN_AUDGE_INIT;
 235   2            fan_pulse_count--;
 236   2        }
 237   1        if(fan_pulse_count>90)
 238   1        {   
 239   2          fan_pulse_count = 90;   
 240   2        } 
 241   1        fan_return_pulse_count = 0;
 242   1      }
 243          
 244          
 245          void power_on(void)
 246          {
 247   1        power_status = POWER_ON_STATUS;
 248   1      //  FAN_POWER_PIN = 1;
 249   1        //fan_pwm_start();
 250   1      //  set_fan_speed(1);
 251   1        //fan_pwm_value = 20;
 252   1        led_on();  //¿ªÏÔÊ¾
 253   1        ion_on();
 254   1        fan_pwm_start();
 255   1      
 256   1        DUST_PWR_PIN = 0;
 257   1      }
 258          
 259          void power_off(void)
 260          {
 261   1        
 262   1        power_status = POWER_OFF_STATUS;  
 263   1        //FAN_POWER_PIN = 0;
 264   1        //fan_pwm_stop();
 265   1        ion_off();
 266   1        led_off();
 267   1        DUST_PWR_PIN = 1;
 268   1      }
 269          
 270          
 271          //void EX1() interrupt  2
 272          //{
 273            //P52 = ~P52;
 274            
 275            //if(P16 == 0)
 276            //{
 277              //P51 = ~P51;
 278              //fan_return_pulse_count++;
 279            //}
 280            
 281          //}
 282          
 283          
 284          
 285          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    546    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 19:52:28 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
