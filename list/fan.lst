C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 21:16:04 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FAN
OBJECT MODULE PLACED IN .\obj\fan.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\fan.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\fan.ls
                    -t) TABS(2) OBJECT(.\obj\fan.obj)

line level    source

   1          
   2          
   3          /*
   4           *fan.c
   5           *Kit Shaw
   6           * 2019.10.2
   7           */
   8           
   9          #include "SC92F844X_C.h"
  10          #include "led.h"
  11          #include "fan.h"
  12          #include "filter.h"
  13          #include "IAP.h"
  14          #include "ion.H"
  15          #include "dust.h"
  16          
  17          //unsigned int xdata PWMRD_40  _at_  0x740;
  18          //unsigned int xdata PWMRD_41  _at_  0x742;
  19          unsigned int xdata PWMRD_42  _at_  0x744;
  20          //unsigned int xdata PWMRD_43  _at_  0x746;
  21          //unsigned int xdata PWMRD_50  _at_  0x748;
  22          //unsigned int xdata PWMRD_51  _at_  0x74A;
  23          //unsigned int xdata PWMRD_52  _at_  0x74C;
  24          //unsigned int xdata PWMRD_53  _at_  0x74E;
  25          unsigned int xdata fan_pwm_value;
  26          unsigned int xdata fan_pulse_count;
  27          unsigned int xdata PWMRD_Temp;
  28          
  29          
  30          unsigned int    fan_return_pulse_count;  //·ç»ú·µ»ØµÄÂö³åÊý¡£
  31          unsigned int    disp_fan_return_pulse;
  32          unsigned char fan_judge; //ÅÐ¶ÏÊÇ·ñÒªµ÷Õû×ªËÙ
  33          
  34          
  35          unsigned char power_status;
  36          unsigned char fan_speed;  // 0ÖÇÄÜ, 1¾²Òô, 2ÖÐ, 3¸ß
  37          
  38          unsigned char fan_regulate_flag;  // 1Òªµ÷ÕûÁË, 0²»µ÷Õû
  39          
  40          /*
  41          void set_power_status(unsigned char sta)
  42          {
  43            power_status = sta;
  44          }
  45          */
  46          unsigned char read_power_status(void)
  47          {
  48   1        return power_status;
  49   1      }
  50          
  51          void fan_init(void)
  52          {
  53   1        fan_speed = FAN_SPEED_AUTO;
  54   1        P0CON &= ~(1<<2);   //P02ÊäÈëÉÏÀ­
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 21:16:04 PAGE 2   

  55   1        P0PH |= 1<<2;
  56   1        
  57   1        P1CON &= ~(1<<6);       //P16ÊäÈëÉÏÀ­
  58   1        P1PH |= 1<<6;
  59   1      
  60   1        //INT1F |= 0X40 ;    //xxxx xxxx P16ÏÂ½µÑØÖÐ¶Ï
  61   1        //INT1R &= ~0X40 ;    //xxxx xxxx  0¹Ø±Õ 1Ê¹ÄÜ
  62   1        //IE  |= 0x04;  //0000 0x0x INT1Ê¹ÄÜ
  63   1        //IP |= 0x04;   //INT1µÍÓÅÏÈ¼¶
  64   1      
  65   1        P4CON |= (1<<2) | (1<<4);     // p44, P42Êä³ö
  66   1        P42 = 0;
  67   1        P44 = 0;
  68   1      
  69   1        //PWMCON = 99;           //ÖÜÆÚÉèÖÃµÍ8Î»,50us  20k
  70   1          //PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  71   1        PWMCON = 199;           //ÖÜÆÚÉèÖÃµÍ8Î»,200us
  72   1          PWMCFG = 0xb0;           //7:¿ª¹Ø  5-4£ºÊ±ÖÓÔ´Ñ¡Ôñ 11:fHRC/8 = 2M  3-0£ºÖÜÆÚÉèÖÃ¸ß4Î» 
  73   1        
  74   1        PWMRD_42 = 0x8000 | 20;
  75   1      }
  76          
  77          
  78          
  79          void fan_pwm_start(void)
  80          {
  81   1        FAN_PC_PIN = 1;
  82   1        //fan_pwm_value = 23;
  83   1        fan_pulse_count = 12;
  84   1        PWMRD_42 |= 0x8000;
  85   1        PWMRD_Temp = 0;
  86   1      }
  87          
  88          //void fan_pwm_stop(void)
  89          //{
  90          //  PWMCON &= 0x7f;
  91          //  FAN_PWM_PIN = 0;
  92          //}
  93          
  94          
  95          /*
  96          void set_fan_speed(unsigned char speed)
  97          {
  98            
  99          }
 100          */
 101          void regulate_fan_speed(void)
 102          //µ÷Õû×ª, µôÓÃÒ»´ÎÇÐ»»Ò»´Î, ×Ô¶¯, µÍ, ÖÐ, ¸ßÒÀ´ÎÑ­»·
 103          {
 104   1        if(++fan_speed> FAN_SPEED_HIGH) fan_speed = FAN_SPEED_AUTO; 
 105   1      }
 106          
 107          unsigned char read_fan_speed(void)
 108          {
 109   1        return fan_speed;
 110   1      }
 111          
 112          void fan_task(void)
 113            //10msµ÷ÓÃÒ»´Î
 114          {
 115   1        //unsigned int tmp;
 116   1        //tmp = PWMRD_42 & (~0x8000);
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 21:16:04 PAGE 3   

 117   1        if(read_power_status() == POWER_ON_STATUS)
 118   1        {
 119   2      
 120   2          if( (PWMRD_Temp & (~0x8000)) != fan_pulse_count)
 121   2          {
 122   3            if( (PWMRD_Temp & (~0x8000)) < fan_pulse_count)
 123   3            {
 124   4              PWMRD_Temp++;
 125   4            }
 126   3            else PWMRD_Temp--;
 127   3      
 128   3            PWMRD_42 = PWMRD_Temp | 0x8000;
 129   3          }
 130   2      
 131   2          //PWMRD_42 = 20 | 0x8000;
 132   2          
 133   2        }
 134   1        else
 135   1        {
 136   2          if(fan_pulse_count>0)
 137   2                      {
 138   3                          fan_pulse_count--;
 139   3                PWMRD_42 = 0x8000 | fan_pulse_count;                    
 140   3                      }
 141   2                      else
 142   2                      {
 143   3                          fan_pulse_count = 0;
 144   3                          PWMRD_42 &= ~0x8000;
 145   3                          FAN_PWM_PIN = 0;
 146   3                FAN_PC_PIN = 0;
 147   3                      }
 148   2        }
 149   1      }
 150          
 151          unsigned int read_disp_fan_return_pulse(void)
 152          {
 153   1        //return  disp_fan_return_pulse;
 154   1        return fan_pulse_count;
 155   1      }
 156          
 157          void store_fan_return_pulse(void)
 158            //°Ñµ±Ç°µÄ×ªËÙÖµ´æ´¢ÆðÀ´
 159          {
 160   1        //disp_fan_return_pulse = fan_return_pulse_count;
 161   1        //disp_fan_return_pulse
 162   1        fan_return_pulse_count = (TH0 << 8) + TL0;
 163   1        TH0 = 0;
 164   1        TL0 = 0;
 165   1        fan_regulate_flag = 1; 
 166   1        //fan_return_pulse_count = 0;
 167   1      }
 168          
 169          
 170          void fan_handle(void)  
 171            //ÉèÖÃ·ç»úµÄËÙ¶È£¬1sµ÷ÓÃÒ»´Î
 172          {
 173   1        //static unsigned char tmp=0; 
 174   1        if(0 == fan_regulate_flag) return;
 175   1        fan_regulate_flag = 0;
 176   1        disp_fan_return_pulse = fan_return_pulse_count;
 177   1        switch(fan_speed)
 178   1        {
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 21:16:04 PAGE 4   

 179   2          case 0: //auto
 180   2      
 181   2          break;
 182   2          case 1:
 183   2            
 184   2            if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 185   2              {
 186   3                if(fan_return_pulse_count<(FAN_LEVEL1_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 187   3                else fan_judge++;     
 188   3              } else
 189   2              {
 190   3                if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR))
 191   3                {
 192   4                  if(fan_return_pulse_count>(FAN_LEVEL1_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 193   4                else fan_judge--;
 194   4                }
 195   3              else fan_judge = FAN_AUDGE_INIT;      
 196   3              }       
 197   2            
 198   2          break;
 199   2          case 2: //
 200   2          
 201   2            if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 202   2              {
 203   3                if(fan_return_pulse_count<(FAN_LEVEL2_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 204   3                else fan_judge++;     
 205   3              } else
 206   2              {
 207   3                if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR))
 208   3                {
 209   4                  if(fan_return_pulse_count>(FAN_LEVEL2_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 210   4                else fan_judge--;
 211   4                }
 212   3              else fan_judge = FAN_AUDGE_INIT;      
 213   3              }  
 214   2            
 215   2          break;
 216   2          case 3:
 217   2            
 218   2            if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR))  //Ã¿0.5s¼ÆËãÒ»´Îµç»úµÄÂö³åÊý£¬ Ã
             -»´ïµ½ÒªÇóµÄ×ªËÙ¾Íµ÷ÕûÂö³åÊý
 219   2              {
 220   3                if(fan_return_pulse_count<(FAN_LEVEL3_PULSE_COUNT-CORRECTION_FACTOR_BIG))fan_judge += FAN_MUST_JUDG
             -E_VALUE;
 221   3                else fan_judge++;     
 222   3              } else
 223   2              {
 224   3                if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR))
 225   3                {
 226   4                  if(fan_return_pulse_count>(FAN_LEVEL3_PULSE_COUNT + CORRECTION_FACTOR_BIG)) fan_judge -= FAN_MUST_
             -JUDGE_VALUE;
 227   4                else fan_judge--;
 228   4                }
 229   3              else fan_judge = FAN_AUDGE_INIT;      
 230   3              }  
 231   2          break;
C51 COMPILER V9.52.0.0   FAN                                                               10/04/2019 21:16:04 PAGE 5   

 232   2          default:
 233   2          break;
 234   2        }
 235   1        
 236   1        if(fan_judge>21) 
 237   1        {
 238   2            fan_judge = FAN_AUDGE_INIT;
 239   2          fan_pulse_count++;
 240   2          
 241   2        }
 242   1        if (fan_judge<19) 
 243   1        {
 244   2            fan_judge = FAN_AUDGE_INIT;
 245   2            fan_pulse_count--;
 246   2        }
 247   1        if(fan_pulse_count>90)
 248   1        {   
 249   2          fan_pulse_count = 90;   
 250   2        } 
 251   1        //fan_return_pulse_count = 0;
 252   1      }
 253          
 254          
 255          void power_on(void)
 256          {
 257   1        power_status = POWER_ON_STATUS;
 258   1        led_on();  //¿ªÏÔÊ¾
 259   1        ion_on();
 260   1        fan_pwm_start();
 261   1      
 262   1        DUST_PWR_PIN = 0;
 263   1      }
 264          
 265          void power_off(void)
 266          {
 267   1        
 268   1        power_status = POWER_OFF_STATUS;  
 269   1        ion_off();
 270   1        led_off();
 271   1        DUST_PWR_PIN = 1;
 272   1      }
 273          
 274          
 275          
 276          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    566    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
