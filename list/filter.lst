C51 COMPILER V9.52.0.0   FILTER                                                            10/04/2019 23:14:45 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FILTER
OBJECT MODULE PLACED IN .\obj\filter.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\filter.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\fil
                    -ter.lst) TABS(2) OBJECT(.\obj\filter.obj)

line level    source

   1          
   2          /*
   3           * filter.c
   4           *
   5           */
   6           
   7          #include "filter.h"
   8          #include "eeprom.h"
   9          #include "led.h"
  10          #include "data_type.h"
  11          #include "fan.h"
  12          #include "sc92f844x_c.h"
  13          //#include "IAP.h"
  14          
  15          
  16          volatile unsigned long filter_time;  //滤网寿命存储在eerom的12h(高位), 13h, 14h, 15h(地位)
  17          unsigned char filter_out_time_flag; //滤网过期标志, 1,outtime
  18           
  19          void filter_init(void)
  20          {
  21   1        //read_filter_time();
  22   1        filter_time = read_filter_time();
  23   1        if(filter_time >= FILTER_TOTAL_TIME)filter_out_time_flag = 1;
  24   1      }
  25          
  26          void filter_task(void)
  27          //100ms调用一次
  28          {
  29   1        
  30   1        static unsigned char count_1s, count2;
  31   1        if(read_power_status() == POWER_OFF_STATUS) return;
  32   1        if(1 == filter_out_time_flag )
  33   1        {
  34   2          if(++count2 >= 3)
  35   2          {
  36   3            count2 = 0;
  37   3      //      led_filter_out_time();
  38   3          }
  39   2        }
  40   1        if(++count_1s >= 10) 
  41   1        {
  42   2          count_1s = 0;
  43   2          if(filter_time >= FILTER_TOTAL_TIME)
  44   2          {
  45   3            if(0 == filter_out_time_flag)write_filter_time();  //到期要写入一次
  46   3            filter_out_time_flag = 1;
  47   3          }
  48   2          else {filter_time++; }
  49   2          
  50   2        }
  51   1      }
  52          
  53          void write_filter_time(void)
  54          {
C51 COMPILER V9.52.0.0   FILTER                                                            10/04/2019 23:14:45 PAGE 2   

  55   1        unsigned long tmp;
  56   1        tmp = filter_time;
  57   1        //while(eeprom_write_byte(15, tmp & 0x000000ff) != 1);//如果写入的和读出的不一致就卡住
  58   1        //WDTCON = 0x10;
  59   1        //IAPWrite(0x0f,(unsigned char)tmp,IapEPPROM); 
  60   1        WDTCON = 0x10;
  61   1        eeprom_write_byte(15, tmp & 0x000000ff);
  62   1        //IAPWrite(0x0f,0x20,IapEPPROM); 
  63   1        
  64   1        tmp >>= 8;
  65   1        WDTCON = 0x10;
  66   1        eeprom_write_byte(14, tmp & 0x000000ff);
  67   1        tmp >>= 8;
  68   1        WDTCON = 0x10;
  69   1        eeprom_write_byte(13, tmp & 0x000000ff);
  70   1        tmp >>= 8;
  71   1        WDTCON = 0x10;
  72   1        eeprom_write_byte(12, tmp & 0x000000ff);
  73   1        
  74   1        
  75   1        
  76   1      }
  77          
  78          unsigned long read_filter_time(void)
  79          {
  80   1        unsigned long temp = 0;
  81   1        //temp = eeprom_read_byte(15);
  82   1        //WDTCON = 0x10;
  83   1        //temp = IAPRead(0x0f, IapEPPROM);
  84   1        
  85   1        WDTCON = 0x10;
  86   1        temp = eeprom_read_byte(12);
  87   1        temp <<= 8;
  88   1        WDTCON = 0x10;
  89   1        temp += eeprom_read_byte(13);
  90   1        temp <<= 8;
  91   1        WDTCON = 0x10;
  92   1        temp += eeprom_read_byte(14);
  93   1        temp <<= 8;
  94   1        WDTCON = 0x10;
  95   1        temp += eeprom_read_byte(15);
  96   1        //temp += IAPRead(0x0f, IapEPPROM);
  97   1        return temp;
  98   1      }
  99          
 100          
 101          
 102          void reset_filter_time(void)
 103          {
 104   1        
 105   1        WDTCON  = 0x10; 
 106   1        eeprom_write_byte(12, 0);
 107   1        WDTCON  = 0x10;
 108   1        eeprom_write_byte(13, 0);
 109   1        WDTCON  = 0x10;
 110   1        eeprom_write_byte(14, 0);
 111   1        WDTCON  = 0x10;
 112   1        eeprom_write_byte(15, 0);
 113   1        
 114   1        //t2 = IAPRead(0x71, IapEPPROM);
 115   1        
 116   1        /*
C51 COMPILER V9.52.0.0   FILTER                                                            10/04/2019 23:14:45 PAGE 3   

 117   1        IAPWrite(12,0x00,IapEPPROM); 
 118   1        WDTCON = 0x10;
 119   1        IAPWrite(13,0x00,IapEPPROM); 
 120   1        WDTCON  = 0x10; 
 121   1        IAPWrite(14,0x00,IapEPPROM); 
 122   1        WDTCON = 0x10;
 123   1        IAPWrite(15,0x00,IapEPPROM); 
 124   1        */
 125   1        filter_time = 0;
 126   1        filter_out_time_flag = 0;
 127   1        
 128   1      //  reset_led_flter_out_time();
 129   1      }
 130          
 131          
 132          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    505    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
