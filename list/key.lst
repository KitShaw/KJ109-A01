C51 COMPILER V9.52.0.0   KEY                                                               10/05/2019 09:55:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\obj\key.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\key.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\key.ls
                    -t) TABS(2) OBJECT(.\obj\key.obj)

line level    source

   1          
   2          
   3          /*
   4           * key.c
   5           */
   6          
   7          #include <key.h>
   8          #include "inc\SC92F844x_C.h"
   9          #include "data_type.h"
  10          #include "lib\SensorMethod.h"
  11          #include "fan.h"
  12          #include "led.h"
  13          #include "eeprom.h"
  14          #include "filter.h"
  15          #include "ion.h"
  16          #include "arom.h"
  17          #include "timing_off.h"
  18          
  19          
  20          bitval key_flag;
  21          
  22          #define KEY_POWER_FLAG  key_flag.bit0
  23          #define KEY_AROM_FLAG key_flag.bit1   
  24          #define KEY_SPEED_FLAG  key_flag.bit2
  25          #define KEY_LOCK_FLAG key_flag.bit3
  26          #define LOCk_FLAG   key_flag.bit6            //童锁解锁标志, 0解锁, 1锁住
  27          #define KEY_ION_FLAG key_flag.bit4
  28          #define KEY_TIMER_FLAG key_flag.bit5
  29          
  30          unsigned short key_power_count;
  31          unsigned short key_speed_count;
  32          unsigned short key_lock_count;
  33          unsigned short key_ion_count;
  34          unsigned short key_timer_count;
  35          unsigned short key_arom_count;
  36          
  37          
  38          INT32U exKeyValueFlag = 0;    //当前轮按键标志
  39          
  40          
  41          /**************************************************
  42          *函数名称：void  Sys_Scan(void) 
  43          *函数功能：扫描TK和显示
  44          *入口参数：void
  45          *出口参数：void  
  46          **************************************************/
  47          void Sys_Scan(void)
  48          {             
  49   1        if(SOCAPI_TouchKeyStatus&0x80)      //重要步骤2:  触摸键扫描一轮标志，是否调用TouchKeyScan()一定要根据此标
             -志位置起后
  50   1         {                                      
  51   2          SOCAPI_TouchKeyStatus &= 0x7f;  //重要步骤3: 清除标志位， 需要外部清除。                              
  52   2          exKeyValueFlag = TouchKeyScan();//按键数据处理函数    电源键是0x0800, 风速键是0x0400, 睡眠键是0x0200
  53   2          TouchKeyRestart();        //启动下一轮转换                                                                  
C51 COMPILER V9.52.0.0   KEY                                                               10/05/2019 09:55:31 PAGE 2   

  54   2        }          
  55   1      }
  56          
  57          void key_init(void)
  58          {
  59   1        LOCk_FLAG = 0;         
  60   1      }
  61          
  62          //0x0100--power
  63          //0x2000--香薰
  64          //0x1000--ion
  65          //0x0080--模式
  66          //0x0040--童锁
  67          //0x0020--timer
  68          //0x31e0
  69          
  70          void key_task(void)       
  71          //按键任务, 1ms调用一次
  72          { 
  73   1        if((exKeyValueFlag & 0x0000031e0) == 0x000000100)//电源键  //灵敏度不够
  74   1        {
  75   2          if(0 == KEY_POWER_FLAG)
  76   2          {
  77   3            if(++key_power_count >= 50)
  78   3            {
  79   4              KEY_POWER_FLAG = 1;
  80   4              key_power_com();        
  81   4            }
  82   3          }
  83   2        }
  84   1        else 
  85   1        {
  86   2          KEY_POWER_FLAG = 0;
  87   2          key_power_count = 0;
  88   2        }
  89   1        
  90   1        
  91   1        
  92   1        if(read_power_status() == POWER_OFF_STATUS)return; //关机状态直接返回
  93   1        
  94   1        if((exKeyValueFlag & 0x0000031e0) == 0x000000080)//风速键 
  95   1        {
  96   2          if(0 == KEY_SPEED_FLAG)
  97   2          {
  98   3            if(++key_speed_count >= 5000)
  99   3            {
 100   4              KEY_SPEED_FLAG = 1;
 101   4              key_speed_long_com();
 102   4            }
 103   3          }
 104   2        }
 105   1        else 
 106   1        {
 107   2          if((key_speed_count>5) && (key_speed_count< 5000))
 108   2          {
 109   3            key_speed_com();
 110   3          }
 111   2          KEY_SPEED_FLAG = 0;
 112   2          key_speed_count = 0;
 113   2        }
 114   1        
 115   1        if((exKeyValueFlag & 0x0000031e0) == 0x000001000)//ion
C51 COMPILER V9.52.0.0   KEY                                                               10/05/2019 09:55:31 PAGE 3   

 116   1        {
 117   2          if(0 == KEY_ION_FLAG)
 118   2          {
 119   3            if(++key_ion_count >= 10)
 120   3            {
 121   4              KEY_ION_FLAG = 1;
 122   4              key_ion_com();        
 123   4            }
 124   3          }
 125   2        }
 126   1        else 
 127   1        {
 128   2          KEY_ION_FLAG = 0;
 129   2          key_ion_count = 0;
 130   2        }
 131   1        
 132   1        if((exKeyValueFlag & 0x0000031e0) == 0x000002000)//arom
 133   1        {
 134   2          if(0 == KEY_AROM_FLAG)
 135   2          {
 136   3            if(++key_arom_count >= 10)
 137   3            {
 138   4              KEY_AROM_FLAG = 1;
 139   4              key_arom_com();       
 140   4            }
 141   3          }
 142   2        }
 143   1        else 
 144   1        {
 145   2          KEY_AROM_FLAG = 0;
 146   2          key_arom_count = 0;
 147   2        }
 148   1          
 149   1        if((exKeyValueFlag & 0x0000031e0) == 0x000000040)//
 150   1        {
 151   2          if(0 == KEY_LOCK_FLAG)
 152   2          {
 153   3            if(++key_lock_count >= 5000)
 154   3            {
 155   4              KEY_LOCK_FLAG = 1;
 156   4              key_lock_com();       
 157   4            }
 158   3          }
 159   2        }
 160   1        else 
 161   1        {
 162   2          KEY_LOCK_FLAG = 0;
 163   2          key_lock_count = 0;
 164   2        }
 165   1        if((exKeyValueFlag & 0x0000031e0) == 0x000000020)//
 166   1        {
 167   2          if(0 == KEY_TIMER_FLAG)
 168   2          {
 169   3            if(++key_timer_count >= 10)
 170   3            {
 171   4              KEY_TIMER_FLAG = 1;
 172   4              key_timer_com();        
 173   4            }
 174   3          }
 175   2        }
 176   1        else 
 177   1        {
C51 COMPILER V9.52.0.0   KEY                                                               10/05/2019 09:55:31 PAGE 4   

 178   2          KEY_TIMER_FLAG = 0;
 179   2          key_timer_count = 0;
 180   2        }
 181   1      }
 182          
 183          void key_ion_com(void)
 184          {
 185   1        ION_PIN = !ION_PIN;
 186   1      }
 187          
 188          void key_timer_com(void)
 189          {
 190   1        regulate_timing_off_level();
 191   1      }
 192          
 193          void key_arom_com(void)
 194          {
 195   1        regulate_arom_level();
 196   1      }
 197          
 198          void key_lock_com(void)
 199          {
 200   1        //P52 = ~P52;
 201   1        //UNLOCk_FLAG = ~UNLOCk_FLAG;
 202   1        LOCk_FLAG = 0;      //解
 203   1      }
 204          
 205          bit read_unlock_flag(void)
 206          {
 207   1        return LOCk_FLAG;
 208   1      }
 209          
 210          void key_speed_com(void)
 211          {
 212   1        regulate_fan_speed();
 213   1      }
 214          
 215          void key_speed_long_com(void)
 216          //长按风速键清楚滤网寿命
 217          {
 218   1        reset_filter_time();
 219   1        //P51 = ~P51;
 220   1      }
 221          
 222          //void key_sleep_com(void)
 223          //{ 
 224          //  P50 = ~P50;
 225          //  if(read_fan_speed() != 0) 
 226          //  {
 227          /////   set_fan_speed(0);
 228          //    //set_night_light_level(0);
 229          //    //led_key_sleep();
 230          //  }
 231          //  else 
 232          //  {
 233          ////    set_fan_speed(1);
 234          //    //led_key_speed();
 235          //  }
 236          //  
 237          //}
 238          
 239          
C51 COMPILER V9.52.0.0   KEY                                                               10/05/2019 09:55:31 PAGE 5   

 240          
 241          void key_power_com(void)
 242          {
 243   1        //unsigned long filter_time_temp;
 244   1        //P50 = ~P50;
 245   1        if(POWER_ON_STATUS == read_power_status())
 246   1        {
 247   2          power_off();
 248   2          //if((read_filter_time()) & 0x000000ff == 0) led_power_on();
 249   2          
 250   2          //filter_time_temp = read_filter_time();
 251   2          //WDTCON  = 0x10;
 252   2          //IAPWrite(0x0f,(unsigned char)(filter_time_temp & 0x000000ff),IapEPPROM); 
 253   2          //IAPWrite(0x0f,0x20,IapEPPROM); 
 254   2          //IAPWrite(0x0f,31,IapEPPROM); 
 255   2          write_filter_time();
 256   2        }
 257   1        else
 258   1        {
 259   2          power_on();
 260   2        }
 261   1      }
 262          
 263          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
