C51 COMPILER V9.52.0.0   KEY                                                               09/30/2019 23:15:06 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\obj\key.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\key.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\key.ls
                    -t) TABS(2) OBJECT(.\obj\key.obj)

line level    source

   1          
   2          
   3          /*
   4           * key.c
   5           */
   6          
   7          #include <key.h>
   8          #include "inc\SC92F844x_C.h"
   9          #include "data_type.h"
  10          #include "lib\SensorMethod.h"
  11          #include "fan.h"
  12          #include "led.h"
  13          #include "eeprom.h"
  14          #include "filter.h"
  15          //#include "IAP.h"
  16          
  17          
  18          bitval key_flag;
  19          
  20          #define KEY_POWER_FLAG  key_flag.bit0
  21          #define KEY_SPEED_FLAG  key_flag.bit1
  22          #define KEY_SLEEP_FLAG  key_flag.bit2
  23          #define KEY_NIGHT_LIGHT_FLAG  key_flag.bit3
  24          unsigned char key_power_count;
  25          unsigned short key_speed_count;
  26          unsigned char key_sleep_count;
  27          unsigned char key_night_light_count;
  28          
  29          INT32U exKeyValueFlag = 0;    //当前轮按键标志
  30          
  31          
  32          /**************************************************
  33          *函数名称：void  Sys_Scan(void) 
  34          *函数功能：扫描TK和显示
  35          *入口参数：void
  36          *出口参数：void  
  37          **************************************************/
  38          void Sys_Scan(void)
  39          {             
  40   1        if(SOCAPI_TouchKeyStatus&0x80)      //重要步骤2:  触摸键扫描一轮标志，是否调用TouchKeyScan()一定要根据此标
             -志位置起后
  41   1         {                                      
  42   2          SOCAPI_TouchKeyStatus &= 0x7f;  //重要步骤3: 清除标志位， 需要外部清除。                              
  43   2          exKeyValueFlag = TouchKeyScan();//按键数据处理函数    电源键是0x0800, 风速键是0x0400, 睡眠键是0x0200
  44   2          TouchKeyRestart();        //启动下一轮转换                                                                  
  45   2        }          
  46   1      }
  47          
  48          
  49          //0x0100--power
  50          //0x2000--香薰
  51          //0x1000--ion
  52          //0x0080--模式
  53          //0x0040--童锁
C51 COMPILER V9.52.0.0   KEY                                                               09/30/2019 23:15:06 PAGE 2   

  54          //0x0020--timer
  55          //0x31e0
  56          
  57          void key_task(void)       
  58          //按键任务, 1ms调用一次
  59          { 
  60   1        
  61   1        //if(read_over_voltage_flag() == 1) return;  //电压超过按键不处理直接返回
  62   1        if((exKeyValueFlag & 0x0000031e0) == 0x000000100)//电源键  //灵敏度不够
  63   1        {
  64   2          if(0 == KEY_POWER_FLAG)
  65   2          {
  66   3            if(++key_power_count >= 50)
  67   3            {
  68   4              KEY_POWER_FLAG = 1;
  69   4              key_power_com();
  70   4              P51 = ~P51;
  71   4            }
  72   3          }
  73   2        }
  74   1        else 
  75   1        {
  76   2          KEY_POWER_FLAG = 0;
  77   2          key_power_count = 0;
  78   2        }
  79   1        
  80   1        if((exKeyValueFlag & 0x000000f00) == 0x000000100)//夜灯键 
  81   1        {
  82   2          if(0 == KEY_NIGHT_LIGHT_FLAG)
  83   2          {
  84   3            if(++key_night_light_count >= 50)
  85   3            {
  86   4              KEY_NIGHT_LIGHT_FLAG = 1;
  87   4              key_night_light_com();
  88   4            }
  89   3          }
  90   2        }
  91   1        else 
  92   1        {
  93   2          KEY_NIGHT_LIGHT_FLAG = 0;
  94   2          key_night_light_count = 0;
  95   2        }
  96   1        
  97   1        if(read_power_status() == POWER_OFF_STATUS)return; //关机状态直接返回
  98   1        
  99   1        if((exKeyValueFlag & 0x000000f00) == 0x000000400)//风速键 
 100   1        {
 101   2          if(0 == KEY_SPEED_FLAG)
 102   2          {
 103   3            if(++key_speed_count >= 5000)
 104   3            {
 105   4              KEY_SPEED_FLAG = 1;
 106   4              key_speed_long_com();
 107   4            }
 108   3          }
 109   2        }
 110   1        else 
 111   1        {
 112   2          if((key_speed_count>50) && (key_speed_count< 5000))
 113   2          {
 114   3            key_speed_com();
 115   3          }
C51 COMPILER V9.52.0.0   KEY                                                               09/30/2019 23:15:06 PAGE 3   

 116   2          KEY_SPEED_FLAG = 0;
 117   2          key_speed_count = 0;
 118   2        }
 119   1        
 120   1        if((exKeyValueFlag & 0x000000f00) == 0x000000200)//睡眠键 
 121   1        {
 122   2          if(0 == KEY_SLEEP_FLAG)
 123   2          {
 124   3            if(++key_sleep_count >= 50)
 125   3            {
 126   4              KEY_SLEEP_FLAG = 1;
 127   4              key_sleep_com();
 128   4            }
 129   3          }
 130   2        }
 131   1        else 
 132   1        {
 133   2          KEY_SLEEP_FLAG = 0;
 134   2          key_sleep_count = 0;
 135   2        }
 136   1          
 137   1      }
 138          
 139          void key_night_light_com(void)
 140          {
 141   1        night_light_level_handle();
 142   1        led_key_night_light();
 143   1      }
 144          
 145          
 146          void key_speed_com(void)
 147          {
 148   1        if(2 == read_fan_speed())set_fan_speed(1);
 149   1        else set_fan_speed(2);
 150   1        //if(flash_write_byte(10, 10) == 1)
 151   1        led_key_speed();
 152   1      }
 153          
 154          void key_speed_long_com(void)
 155          //长按风速键清楚滤网寿命
 156          {
 157   1        reset_filter_time();
 158   1      }
 159          
 160          void key_sleep_com(void)
 161          { 
 162   1        P50 = ~P50;
 163   1        if(read_fan_speed() != 0) 
 164   1        {
 165   2          set_fan_speed(0);
 166   2          set_night_light_level(0);
 167   2          led_key_sleep();
 168   2        }
 169   1        else 
 170   1        {
 171   2          set_fan_speed(1);
 172   2          led_key_speed();
 173   2        }
 174   1        
 175   1      }
 176          
 177          
C51 COMPILER V9.52.0.0   KEY                                                               09/30/2019 23:15:06 PAGE 4   

 178          
 179          void key_power_com(void)
 180          {
 181   1        //unsigned long filter_time_temp;
 182   1        if(POWER_ON_STATUS == read_power_status())
 183   1        {
 184   2          power_off();
 185   2          //if((read_filter_time()) & 0x000000ff == 0) led_power_on();
 186   2          
 187   2          //filter_time_temp = read_filter_time();
 188   2          //WDTCON  = 0x10;
 189   2          //IAPWrite(0x0f,(unsigned char)(filter_time_temp & 0x000000ff),IapEPPROM); 
 190   2          //IAPWrite(0x0f,0x20,IapEPPROM); 
 191   2          //IAPWrite(0x0f,31,IapEPPROM); 
 192   2          write_filter_time();
 193   2        }
 194   1        else
 195   1        {
 196   2          power_on();
 197   2        }
 198   1      }
 199          
 200          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    342    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
