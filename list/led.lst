C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\obj\led.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\led.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\led.ls
                    -t) TABS(2) OBJECT(.\obj\led.obj)

line level    source

   1          
   2          /*
   3           *  led.c
   4           *  Kit Shaw
   5           *  2019/10/01
   6           */
   7           
   8          
   9          #include "led.h"
  10          #include "SC92F844X_C.h"
  11          #include "data_type.h"
  12          #include "fan.h"
  13          #include "ion.h"
  14          #include "key.h"
  15          #include "dust.h"
  16          #include "arom.h"
  17          #include "timing_off.h"
  18          
  19          unsigned char xdata LEDRAM[30] _at_ 0x700;
  20          
  21          void led_init(void)
  22          { 
  23   1        P5CON |= ((1<<0) | (1<<1)| (1<<2)); //
  24   1        //P5 &= ~((1<<0) | (1<<1)| (1<<2)); 
  25   1      
  26   1        P2CON |= 0x7f; //P2 out.
  27   1        LED_RED = 1;
  28   1        LED_GREEN = 1;
  29   1        LED_BLUE = 0;
  30   1      
  31   1        P3CON |= (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7); //P33, 34,35,35,37 out.
  32   1      
  33   1        P4CON |= (1<<0) | (1<<1) | (1<<6) | (1<<7);
  34   1        P0CON |= (1<<1) | (1<<5) | (1<<6);// | (1<<6) | (1<<7);
  35   1        P1CON |= (1<<6) | (1<<7);
  36   1      
  37   1        led_off();
  38   1        
  39   1        
  40   1      }
  41          
  42          void led_task(void)
  43          //100ms调用一次
  44          {
  45   1          if(read_power_status() == POWER_OFF_STATUS)
  46   1          {     
  47   2            return;
  48   2          }
  49   1          led_display_ion();
  50   1          led_display_arom_level();
  51   1          led_display_mode();
  52   1          led_display_lock();
  53   1        led_display_pm25();
  54   1        led_display_dust_level();
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 2   

  55   1        led_display_timing_off_level();
  56   1        
  57   1      }
  58          
  59          
  60          void led_display_filter_out(unsigned char filter_flag)
  61          {
  62   1        if( 1 == filter_flag) LEDRAM[21] |= 0x10;  //滤网, 电源按键
  63   1        else LEDRAM[21] &= ~0x10;  //滤网, 电源按键
  64   1      }
  65          
  66          void led_off(void)
  67          {
  68   1        //DDRCON &= ~0x80;
  69   1        LED_GREEN = 1;
  70   1        LED_BLUE = 1;
  71   1        LED_RED = 1;
  72   1        LED_PM2_5 = 1;
  73   1        LED_TIMER_1H = 1;
  74   1        LED_TIMER_2H = 1; 
  75   1        LED_TIMER_4H = 1;
  76   1        LED_KEY_TIMER = 1;
  77   1        LED_FILTER = 1;
  78   1        LED_ION = 1;
  79   1        LED_KEY_ION  = 1;
  80   1        LED_KEY_AROM  = 1;
  81   1        LED_AROM_LOW = 1;
  82   1        LED_AROM_MIDDLE = 1;
  83   1        LED_AROM_HIGH  = 1;
  84   1        LED_SPEED_LOW = 1;
  85   1        LED_SPEED_MIDDLE = 1;
  86   1        LED_SPEED_HIGH = 1;
  87   1        LED_SPEED_AUTO = 1;
  88   1        LED_KEY_MODE = 1;
  89   1        LED_LOCK = 1;
  90   1        LED_KEY_LOCK = 1;
  91   1        LED_KEY_POWER = 1;
  92   1        /*
  93   1        LEDRAM[11] &= ~0x08;  // 童锁图标
  94   1        LEDRAM[12] &= ~0x18;  //0x10 -P2.5  0x08-8H
  95   1        LEDRAM[13] &= ~0x18;  //0x10 - 高, 0x08 - 4H
  96   1        LEDRAM[14] &= ~0x18;  //0x10 - 中, 0x08 - 2H  
  97   1        //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
  98   1        LEDRAM[15] &= ~0xf8;  //0x10 - 低, 0x08 - 1H
  99   1        //数码管g段
 100   1        LEDRAM[16] &= ~0xf0;  //0x10 - ION图标, 0x08香薰按键,   
 101   1        //数码管F段
 102   1        LEDRAM[17] &= ~0xf0;   //0x10- 高速 和 0x08-负离子按键
 103   1        //数码管E段
 104   1        LEDRAM[18] &= ~0xf0;   //0x10- 中速 , 0x08 - 模式按键
 105   1        //数码管D段
 106   1        LEDRAM[19] &= ~0xf0;  //低速 ,  童锁按键
 107   1        //数码管C段
 108   1        LEDRAM[20] &= ~0xf0;  //智能, 定时按键
 109   1        //数码管B段
 110   1        LEDRAM[21] &= ~0xf0;  //滤网, 电源按键
 111   1        //数码管A段
 112   1        */
 113   1      }
 114          
 115          void led_all_on(void)
 116          {
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 3   

 117   1        //DDRCON &= ~0x80;
 118   1        LED_GREEN = 0;
 119   1        LED_BLUE = 0;
 120   1        LED_RED = 0;
 121   1      
 122   1        LED_PM2_5 = 0;
 123   1        LED_TIMER_1H = 0;
 124   1        LED_TIMER_2H = 0; 
 125   1        LED_TIMER_4H = 0;
 126   1        LED_KEY_TIMER = 0;
 127   1        LED_FILTER = 0;
 128   1        LED_ION = 0;
 129   1        LED_KEY_ION  = 0;
 130   1        LED_KEY_AROM  = 0;
 131   1        LED_AROM_LOW = 0;
 132   1        LED_AROM_MIDDLE = 0;
 133   1        LED_AROM_HIGH  = 0;
 134   1        LED_SPEED_LOW = 0;
 135   1        LED_SPEED_MIDDLE = 0;
 136   1        LED_SPEED_HIGH = 0;
 137   1        LED_SPEED_AUTO = 0;
 138   1        LED_KEY_MODE = 0;
 139   1        LED_LOCK = 0;
 140   1        LED_KEY_LOCK = 0;
 141   1        LED_KEY_POWER = 0;
 142   1      
 143   1      
 144   1        /*
 145   1        LEDRAM[11] |= 0x08;  // 童锁图标
 146   1        LEDRAM[12] |= 0x18;  //0x10 -P2.5  0x08-8H
 147   1        LEDRAM[13] |= 0x18;  //0x10 - 高, 0x08 - 4H
 148   1        LEDRAM[14] |= 0x18;  //0x10 - 中, 0x08 - 2H  
 149   1        //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 150   1        LEDRAM[15] |= 0xf8;  //0x10 - 低, 0x08 - 1H
 151   1        //数码管g段
 152   1        LEDRAM[16] |= 0xf8;;  //0x10 - ION图标, 0x08香薰按键,   
 153   1        //数码管F段
 154   1        LEDRAM[17] |= 0xf8;;   //0x10- 高速 和 0x08-负离子按键
 155   1        //数码管E段
 156   1        LEDRAM[18] |= 0xf8;;   //0x10- 中速 , 0x08 - 模式按键
 157   1        //数码管D段
 158   1        LEDRAM[19] |= 0xf8;;  //低速 ,  童锁按键
 159   1        //数码管C段
 160   1        LEDRAM[20] |= 0xf8;;  //智能, 定时按键
 161   1        //数码管B段
 162   1        LEDRAM[21] |= 0xf8;;  //滤网, 电源按键
 163   1        //数码管A段
 164   1        */
 165   1      }
 166          
 167          
 168          void led_on(void)
 169          {
 170   1        DDRCON |= 0x80;
 171   1      }
 172          
 173          
 174          void led_display_pm25(void)
 175          {
 176   1        unsigned short tmp_dust_display_value;
 177   1        tmp_dust_display_value = read_dust_display_value();
 178   1        led_display_bcd(tmp_dust_display_value / 100, HUNDRED_DIGIT);
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 4   

 179   1        led_display_bcd(tmp_dust_display_value % 100 / 10, TEN_DIGIT);
 180   1        led_display_bcd(tmp_dust_display_value % 10, SINGLE_DIGIT);
 181   1        LEDRAM[12] |= 0x10;  //PM2.5图标
 182   1      }
 183          
 184          void led_display_timing_off_level(void)
 185          {
 186   1        switch(read_timing_off_level())
 187   1        {
 188   2          //case 0:  //关闭
 189   2          //  LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 190   2          //  LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 191   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 192   2          //  LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 193   2          //break;
 194   2          case 1:  // 1H
 195   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 196   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 197   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 198   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 199   2            LEDRAM[15] |= 0x08;  //0x10 - 低, 0x08 - 1H
 200   2          break;
 201   2          case 2:  // 2H
 202   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 203   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 204   2            LEDRAM[14] |= 0x08;  //0x10 - 中, 0x08 - 2H  
 205   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 206   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 207   2          break;
 208   2          case 3:  // 4H
 209   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 210   2            LEDRAM[13] |= 0x08;  //0x10 - 高, 0x08 - 4H
 211   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 212   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 213   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 214   2          break;
 215   2          case 4:  // 8H
 216   2            LEDRAM[12] |= 0x08;  //0x10 -P2.5  0x08-8H
 217   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 218   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 219   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 220   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 221   2          break;
 222   2          default:
 223   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 224   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 225   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 226   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 227   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 228   2          break;
 229   2        }
 230   1      }
 231          
 232          void led_display_arom_level(void)
 233          {
 234   1        switch(read_arom_level())
 235   1        {
 236   2          //case 0:  //关闭
 237   2          //  LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 238   2          //  LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 239   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 240   2          //  LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 5   

 241   2          //break;
 242   2          case 1:  //低
 243   2            LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 244   2            LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 245   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 246   2            LEDRAM[15] |= 0x10;  //0x10 - 低, 0x08 - 1H
 247   2          break;
 248   2          case 2:  //中
 249   2            LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 250   2            LEDRAM[14] |= 0x10;  //0x10 - 中, 0x08 - 2H  
 251   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 252   2            LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 253   2          break;
 254   2          case 3:  //高
 255   2            LEDRAM[13] |= 0x10;  //0x10 - 高, 0x08 - 4H
 256   2            LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 257   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 258   2            LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 259   2          break;
 260   2          default:
 261   2            LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 262   2            LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 263   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 264   2            LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 265   2          break;
 266   2        }
 267   1      }
 268          
 269          void led_display_dust_level(void)
 270          {
 271   1        switch(read_dust_level())
 272   1        {
 273   2          case DUST_LEVEL_EXCELLENT:
 274   2            LED_GREEN = 0;
 275   2            LED_BLUE = 1;
 276   2            LED_RED = 1;
 277   2          break;
 278   2          case DUST_LEVEL_12:
 279   2            LED_GREEN = 0;
 280   2            LED_BLUE = 0;
 281   2            LED_RED = 1;
 282   2          break;
 283   2          case DUST_LEVEL_MEDIUM:
 284   2            LED_GREEN = 0;
 285   2            LED_BLUE = 1;
 286   2            LED_RED = 0;
 287   2          break;
 288   2          /*
 289   2          case DUST_LEVEL_23:
 290   2            LED_GREEN = 1;
 291   2            LED_BLUE = 1;
 292   2            LED_RED = 0;
 293   2          break;
 294   2          */
 295   2          case DUST_LEVEL_BAD:
 296   2            LED_GREEN = 1;
 297   2            LED_BLUE = 1;
 298   2            LED_RED = 0;
 299   2          break;
 300   2          default:
 301   2            LED_GREEN = 0;
 302   2            LED_BLUE = 1;
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 6   

 303   2            LED_RED = 1;
 304   2          break;
 305   2        }
 306   1      }
 307          
 308          void led_display_lock(void)
 309          {
 310   1        if( 0 == read_unlock_flag())
 311   1        {
 312   2          LEDRAM[11] &= ~0x08;  // 童锁图标
 313   2        }
 314   1        else
 315   1        {
 316   2          LEDRAM[11] |= 0x08;  // 童锁图标
 317   2        }
 318   1      }
 319          
 320          void led_display_ion(void)
 321          {
 322   1        if(0 == ION_PIN)
 323   1        {
 324   2          //LEDRAM[16] |= 0x10;  //0x10 - ION图标, 0x08香薰按键, 
 325   2          LED_ION = LED_ON;
 326   2        }
 327   1        else
 328   1        {
 329   2          LED_ION = LED_OFF;
 330   2          //LEDRAM[16] &= ~0x10;  //0x10 - ION图标, 0x08香薰按键, 
 331   2        }
 332   1      }
 333          
 334          void led_display_mode(void)
 335            //智能, 酒店, 中速, 超强
 336          {
 337   1        switch(read_fan_speed())
 338   1        {
 339   2          case FAN_SPEED_AUTO:
 340   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 341   2            //数码管E段
 342   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 343   2            //数码管D段
 344   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 345   2            //数码管C段
 346   2            LEDRAM[20] |= 0x10;  //智能, 定时按键
 347   2          break;
 348   2          case FAN_SPEED_SLEEP:
 349   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 350   2            //数码管E段
 351   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 352   2            //数码管D段
 353   2            LEDRAM[19] |= 0x10;  //低速 ,  童锁按键
 354   2            //数码管C段
 355   2            LEDRAM[20] &= ~0x10;  //智能, 定时按键
 356   2          break;
 357   2          case FAN_SPEED_MIDDLE:
 358   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 359   2            //数码管E段
 360   2            LEDRAM[18] |= 0x10;   //0x10- 中速 , 0x08 - 模式按键
 361   2            //数码管D段
 362   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 363   2            //数码管C段
 364   2            LEDRAM[20] &= ~0x10;  //智能, 定时按键
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 7   

 365   2          break;
 366   2          case FAN_SPEED_HIGH:
 367   2            LEDRAM[17] |= 0x10;   //0x10- 高速 和 0x08-负离子按键
 368   2            //数码管E段
 369   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 370   2            //数码管D段
 371   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 372   2            //数码管C段
 373   2            LEDRAM[20] &= ~0x10;  //智能, 定时按键
 374   2          break;
 375   2          default:
 376   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 377   2            //数码管E段
 378   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 379   2            //数码管D段
 380   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 381   2            //数码管C段
 382   2            LEDRAM[20] |= 0x10;  //智能, 定时按键
 383   2          break;
 384   2        }
 385   1      }
 386          
 387          void led_display_bcd(unsigned char bcd_value, unsigned char digit)
 388          //digit, 第7位是百位, 6位是10位, 5位是个位
 389          {
 390   1        switch(bcd_value)
 391   1        {
 392   2          case 0:
 393   2            LEDRAM[15] &= (~(1<<digit));
 394   2            //数码管g段
 395   2            LEDRAM[16] |= (1<<digit);  //  
 396   2            //数码管F段
 397   2            LEDRAM[17] |= (1<<digit);   //
 398   2            //数码管E段
 399   2            LEDRAM[18] |= (1<<digit);   //
 400   2            //数码管D段
 401   2            LEDRAM[19] |= (1<<digit);  //
 402   2            //数码管C段
 403   2            LEDRAM[20] |= (1<<digit);  //
 404   2            //数码管B段
 405   2            LEDRAM[21] |= (1<<digit);  //
 406   2            //数码管A段
 407   2          break;
 408   2          case 1:
 409   2            LEDRAM[15] &= (~(1<<digit));
 410   2            //数码管g段
 411   2            LEDRAM[16] &= (~(1<<digit));  //  
 412   2            //数码管F段
 413   2            LEDRAM[17] &= (~(1<<digit));  //
 414   2            //数码管E段
 415   2            LEDRAM[18] &= (~(1<<digit));  //
 416   2            //数码管D段
 417   2            LEDRAM[19] |= (1<<digit);  //
 418   2            //数码管C段
 419   2            LEDRAM[20] |= (1<<digit);  //
 420   2            //数码管B段
 421   2            LEDRAM[21] &= (~(1<<digit));  //
 422   2            //数码管A段
 423   2          break;
 424   2          case 2:
 425   2            LEDRAM[15] |= (1<<digit);
 426   2            //数码管g段
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 8   

 427   2            LEDRAM[16] &= (~(1<<digit));  //  
 428   2            //数码管F段
 429   2            LEDRAM[17] |= (1<<digit);   //
 430   2            //数码管E段
 431   2            LEDRAM[18] |= (1<<digit);   //
 432   2            //数码管D段
 433   2            LEDRAM[19] &= ~(1<<digit);  //
 434   2            //数码管C段
 435   2            LEDRAM[20] |= (1<<digit);  //
 436   2            //数码管B段
 437   2            LEDRAM[21] |= (1<<digit);  //
 438   2            //数码管A段
 439   2          break;
 440   2          case 3:
 441   2            LEDRAM[15] |= (1<<digit);
 442   2            //数码管g段
 443   2            LEDRAM[16] &= (~(1<<digit)) ; //  
 444   2            //数码管F段
 445   2            LEDRAM[17] &= ~(1<<digit);   //
 446   2            //数码管E段
 447   2            LEDRAM[18] |= (1<<digit);   //
 448   2            //数码管D段
 449   2            LEDRAM[19] |= (1<<digit);  //
 450   2            //数码管C段
 451   2            LEDRAM[20] |= (1<<digit);  //
 452   2            //数码管B段
 453   2            LEDRAM[21] |= (1<<digit);  //
 454   2            //数码管A段
 455   2          break;
 456   2          case 4:
 457   2            LEDRAM[15] |= (1<<digit);
 458   2            //数码管g段
 459   2            LEDRAM[16] |= (1<<digit);  //  
 460   2            //数码管F段
 461   2            LEDRAM[17] &= ~(1<<digit);   //
 462   2            //数码管E段
 463   2            LEDRAM[18] &= ~(1<<digit);   //
 464   2            //数码管D段
 465   2            LEDRAM[19] |= (1<<digit);  //
 466   2            //数码管C段
 467   2            LEDRAM[20] |= (1<<digit);  //
 468   2            //数码管B段
 469   2            LEDRAM[21] &= ~(1<<digit);  //
 470   2            //数码管A段
 471   2          break;
 472   2          case 5:
 473   2            LEDRAM[15] |= (1<<digit);
 474   2            //数码管g段
 475   2            LEDRAM[16] |= (1<<digit);  //  
 476   2            //数码管F段
 477   2            LEDRAM[17] &= ~(1<<digit);   //
 478   2            //数码管E段
 479   2            LEDRAM[18] |= (1<<digit);   //
 480   2            //数码管D段
 481   2            LEDRAM[19] |= (1<<digit);  //
 482   2            //数码管C段
 483   2            LEDRAM[20] &= ~(1<<digit);  //
 484   2            //数码管B段
 485   2            LEDRAM[21] |= (1<<digit);  //
 486   2            //数码管A段
 487   2          break;
 488   2          case 6:
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 9   

 489   2            LEDRAM[15] |= (1<<digit);
 490   2            //数码管g段
 491   2            LEDRAM[16] |= (1<<digit);  //  
 492   2            //数码管F段
 493   2            LEDRAM[17] |= (1<<digit);   //
 494   2            //数码管E段
 495   2            LEDRAM[18] |= (1<<digit);   //
 496   2            //数码管D段
 497   2            LEDRAM[19] |= (1<<digit);  //
 498   2            //数码管C段
 499   2            LEDRAM[20] &= ~(1<<digit);  //
 500   2            //数码管B段
 501   2            LEDRAM[21] |= (1<<digit);  //
 502   2            //数码管A段
 503   2          break;
 504   2          case 7:
 505   2            LEDRAM[15] &= ~(1<<digit);
 506   2            //数码管g段
 507   2            LEDRAM[16] &= ~(1<<digit);  //  
 508   2            //数码管F段
 509   2            LEDRAM[17] &= ~(1<<digit);   //
 510   2            //数码管E段
 511   2            LEDRAM[18] &= ~(1<<digit);   //
 512   2            //数码管D段
 513   2            LEDRAM[19] |= (1<<digit);  //
 514   2            //数码管C段
 515   2            LEDRAM[20] |= (1<<digit);  //
 516   2            //数码管B段
 517   2            LEDRAM[21] |= (1<<digit);  //
 518   2            //数码管A段
 519   2          break;
 520   2          case 8:
 521   2            LEDRAM[15] |= (1<<digit);
 522   2            //数码管g段
 523   2            LEDRAM[16] |= (1<<digit);  //  
 524   2            //数码管F段
 525   2            LEDRAM[17] |= (1<<digit);   //
 526   2            //数码管E段
 527   2            LEDRAM[18] |= (1<<digit);   //
 528   2            //数码管D段
 529   2            LEDRAM[19] |= (1<<digit);  //
 530   2            //数码管C段
 531   2            LEDRAM[20] |= (1<<digit);  //
 532   2            //数码管B段
 533   2            LEDRAM[21] |= (1<<digit);  //
 534   2            //数码管A段
 535   2          break;
 536   2          case 9:
 537   2            LEDRAM[15] |= (1<<digit);
 538   2            //数码管g段
 539   2            LEDRAM[16] |= (1<<digit);  //  
 540   2            //数码管F段
 541   2            LEDRAM[17] &= ~(1<<digit);   //
 542   2            //数码管E段
 543   2            LEDRAM[18] |= (1<<digit);   //
 544   2            //数码管D段
 545   2            LEDRAM[19] |= (1<<digit);  //
 546   2            //数码管C段
 547   2            LEDRAM[20] |= (1<<digit);  //
 548   2            //数码管B段
 549   2            LEDRAM[21] |= (1<<digit);  //
 550   2            //数码管A段
C51 COMPILER V9.52.0.0   LED                                                               10/18/2019 07:27:34 PAGE 10  

 551   2          break;
 552   2          default:
 553   2          break;        
 554   2        }
 555   1      }
 556          
 557          
 558          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
