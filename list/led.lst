C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\obj\led.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\led.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\led.ls
                    -t) TABS(2) OBJECT(.\obj\led.obj)

line level    source

   1          
   2          /*
   3           *  led.c
   4           *  Kit Shaw
   5           *  2019/10/01
   6           */
   7           
   8          
   9          #include "led.h"
  10          #include "SC92F844X_C.h"
  11          #include "data_type.h"
  12          #include "fan.h"
  13          #include "ion.h"
  14          #include "key.h"
  15          #include "dust.h"
  16          #include "arom.h"
  17          #include "timing_off.h"
  18          
  19          unsigned char xdata LEDRAM[30] _at_ 0x700;
  20          
  21          void led_init(void)
  22          { 
  23   1        P5CON |= ((1<<0) | (1<<1)| (1<<2)); //
  24   1        P5 &= ~((1<<0) | (1<<1)| (1<<2)); 
  25   1        LED_RED = 1;
  26   1        LED_GREEN = 1;
  27   1        LED_BLUE = 0; 
  28   1        
  29   1        DDRCON |= 0xef;
  30   1        //IOHCON0 = 0xc0;
  31   1        //IOHCON1 = 0x00;
  32   1        
  33   1        //P1CON |= (1<<7);
  34   1        P1VO |=  (1<<7);  //打开P17口的显示驱动输出功能
  35   1        P2VO |= 0xff;     //P2口都用做led的显示
  36   1        P0VO |= (1<<1) | (1<<0);  //P11, P01
  37   1        //s11-s21
  38   1        P3VO |= (1<<3) | (1<<4) |(1<<5) | (1<<6) | (1<<7);  //P33-P37LED驱动
  39   1        //c3, c4, c5, c6, c7  
  40   1        OTCON = 0x00;
  41   1      
  42   1        LEDRAM[16] |= 0x08;  //0x10 - ION图标, 0x08香薰按键,   
  43   1        //数码管F段
  44   1        LEDRAM[17] |= 0x08;   //0x10- 高速 和 0x08-负离子按键
  45   1        //数码管E段
  46   1        LEDRAM[18] |= 0x08;   //0x10- 中速 , 0x08 - 模式按键
  47   1        //数码管D段
  48   1        LEDRAM[19] |= 0x08;  //低速 ,  童锁按键
  49   1        //数码管C段
  50   1        LEDRAM[20] |= 0x08;  //智能, 定时按键
  51   1        //数码管B段
  52   1        LEDRAM[21] |= 0x08;  //滤网, 电源按键
  53   1      }
  54          
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 2   

  55          void led_task(void)
  56          //100ms调用一次
  57          {
  58   1          if(read_power_status() == POWER_OFF_STATUS)
  59   1          {     
  60   2            return;
  61   2          }
  62   1          led_display_ion();
  63   1          led_display_arom_level();
  64   1          led_display_mode();
  65   1          led_display_lock();
  66   1        led_display_pm25();
  67   1        led_display_dust_level();
  68   1        led_display_timing_off_level();
  69   1        
  70   1      }
  71          
  72          
  73          void led_display_filter_out(unsigned char filter_flag)
  74          {
  75   1        if( 1 == filter_flag) LEDRAM[21] |= 0x10;  //滤网, 电源按键
  76   1        else LEDRAM[21] &= ~0x10;  //滤网, 电源按键
  77   1      }
  78          
  79          void led_off(void)
  80          {
  81   1        //DDRCON &= ~0x80;
  82   1        LED_GREEN = 1;
  83   1        LED_BLUE = 1;
  84   1        LED_RED = 1;
  85   1        
  86   1        LEDRAM[11] &= ~0x08;  // 童锁图标
  87   1        LEDRAM[12] &= ~0x18;  //0x10 -P2.5  0x08-8H
  88   1        LEDRAM[13] &= ~0x18;  //0x10 - 高, 0x08 - 4H
  89   1        LEDRAM[14] &= ~0x18;  //0x10 - 中, 0x08 - 2H  
  90   1        //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
  91   1        LEDRAM[15] &= ~0xf8;  //0x10 - 低, 0x08 - 1H
  92   1        //数码管g段
  93   1        LEDRAM[16] &= ~0xf0;  //0x10 - ION图标, 0x08香薰按键,   
  94   1        //数码管F段
  95   1        LEDRAM[17] &= ~0xf0;   //0x10- 高速 和 0x08-负离子按键
  96   1        //数码管E段
  97   1        LEDRAM[18] &= ~0xf0;   //0x10- 中速 , 0x08 - 模式按键
  98   1        //数码管D段
  99   1        LEDRAM[19] &= ~0xf0;  //低速 ,  童锁按键
 100   1        //数码管C段
 101   1        LEDRAM[20] &= ~0xf0;  //智能, 定时按键
 102   1        //数码管B段
 103   1        LEDRAM[21] &= ~0xf0;  //滤网, 电源按键
 104   1        //数码管A段
 105   1      }
 106          
 107          void led_on(void)
 108          {
 109   1        DDRCON |= 0x80;
 110   1      }
 111          
 112          
 113          void led_display_pm25(void)
 114          {
 115   1        unsigned short tmp_dust_display_value;
 116   1        tmp_dust_display_value = read_dust_display_value();
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 3   

 117   1        led_display_bcd(tmp_dust_display_value / 100, HUNDRED_DIGIT);
 118   1        led_display_bcd(tmp_dust_display_value % 100 / 10, TEN_DIGIT);
 119   1        led_display_bcd(tmp_dust_display_value % 10, SINGLE_DIGIT);
 120   1        LEDRAM[12] |= 0x10;  //PM2.5图标
 121   1      }
 122          
 123          void led_display_timing_off_level(void)
 124          {
 125   1        switch(read_timing_off_level())
 126   1        {
 127   2          //case 0:  //关闭
 128   2          //  LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 129   2          //  LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 130   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 131   2          //  LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 132   2          //break;
 133   2          case 1:  // 1H
 134   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 135   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 136   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 137   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 138   2            LEDRAM[15] |= 0x08;  //0x10 - 低, 0x08 - 1H
 139   2          break;
 140   2          case 2:  // 2H
 141   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 142   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 143   2            LEDRAM[14] |= 0x08;  //0x10 - 中, 0x08 - 2H  
 144   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 145   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 146   2          break;
 147   2          case 3:  // 4H
 148   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 149   2            LEDRAM[13] |= 0x08;  //0x10 - 高, 0x08 - 4H
 150   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 151   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 152   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 153   2          break;
 154   2          case 4:  // 8H
 155   2            LEDRAM[12] |= 0x08;  //0x10 -P2.5  0x08-8H
 156   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 157   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 158   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 159   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 160   2          break;
 161   2          default:
 162   2            LEDRAM[12] &= ~0x08;  //0x10 -P2.5  0x08-8H
 163   2            LEDRAM[13] &= ~0x08;  //0x10 - 高, 0x08 - 4H
 164   2            LEDRAM[14] &= ~0x08;  //0x10 - 中, 0x08 - 2H  
 165   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 166   2            LEDRAM[15] &= ~0x08;  //0x10 - 低, 0x08 - 1H
 167   2          break;
 168   2        }
 169   1      }
 170          
 171          void led_display_arom_level(void)
 172          {
 173   1        switch(read_arom_level())
 174   1        {
 175   2          //case 0:  //关闭
 176   2          //  LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 177   2          //  LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 178   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 4   

 179   2          //  LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 180   2          //break;
 181   2          case 1:  //低
 182   2            LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 183   2            LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 184   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 185   2            LEDRAM[15] |= 0x10;  //0x10 - 低, 0x08 - 1H
 186   2          break;
 187   2          case 2:  //中
 188   2            LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 189   2            LEDRAM[14] |= 0x10;  //0x10 - 中, 0x08 - 2H  
 190   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 191   2            LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 192   2          break;
 193   2          case 3:  //高
 194   2            LEDRAM[13] |= 0x10;  //0x10 - 高, 0x08 - 4H
 195   2            LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 196   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 197   2            LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 198   2          break;
 199   2          default:
 200   2            LEDRAM[13] &= ~0x10;  //0x10 - 高, 0x08 - 4H
 201   2            LEDRAM[14] &= ~0x10;  //0x10 - 中, 0x08 - 2H  
 202   2            //0x80 - 数码管百位的小数点,  0x40 十位, 0x20 个位
 203   2            LEDRAM[15] &= ~0x10;  //0x10 - 低, 0x08 - 1H
 204   2          break;
 205   2        }
 206   1      }
 207          
 208          void led_display_dust_level(void)
 209          {
 210   1        switch(read_dust_level())
 211   1        {
 212   2          case DUST_LEVEL_EXCELLENT:
 213   2            LED_GREEN = 0;
 214   2            LED_BLUE = 1;
 215   2            LED_RED = 1;
 216   2          break;
 217   2          case DUST_LEVEL_12:
 218   2            LED_GREEN = 0;
 219   2            LED_BLUE = 0;
 220   2            LED_RED = 1;
 221   2          break;
 222   2          case DUST_LEVEL_MEDIUM:
 223   2            LED_GREEN = 0;
 224   2            LED_BLUE = 1;
 225   2            LED_RED = 0;
 226   2          break;
 227   2          /*
 228   2          case DUST_LEVEL_23:
 229   2            LED_GREEN = 1;
 230   2            LED_BLUE = 1;
 231   2            LED_RED = 0;
 232   2          break;
 233   2          */
 234   2          case DUST_LEVEL_BAD:
 235   2            LED_GREEN = 1;
 236   2            LED_BLUE = 1;
 237   2            LED_RED = 0;
 238   2          break;
 239   2          default:
 240   2            LED_GREEN = 0;
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 5   

 241   2            LED_BLUE = 1;
 242   2            LED_RED = 1;
 243   2          break;
 244   2        }
 245   1      }
 246          
 247          void led_display_lock(void)
 248          {
 249   1        if( 0 == read_unlock_flag())
 250   1        {
 251   2          LEDRAM[11] &= ~0x08;  // 童锁图标
 252   2        }
 253   1        else
 254   1        {
 255   2          LEDRAM[11] |= 0x08;  // 童锁图标
 256   2        }
 257   1      }
 258          
 259          void led_display_ion(void)
 260          {
 261   1        if(1 == ION_PIN)
 262   1        {
 263   2          LEDRAM[16] |= 0x10;  //0x10 - ION图标, 0x08香薰按键, 
 264   2        }
 265   1        else
 266   1        {
 267   2          LEDRAM[16] &= ~0x10;  //0x10 - ION图标, 0x08香薰按键, 
 268   2        }
 269   1      }
 270          
 271          void led_display_mode(void)
 272            //智能, 酒店, 中速, 超强
 273          {
 274   1        switch(read_fan_speed())
 275   1        {
 276   2          case FAN_SPEED_AUTO:
 277   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 278   2            //数码管E段
 279   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 280   2            //数码管D段
 281   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 282   2            //数码管C段
 283   2            LEDRAM[20] |= 0x10;  //智能, 定时按键
 284   2          break;
 285   2          case FAN_SPEED_SLEEP:
 286   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 287   2            //数码管E段
 288   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 289   2            //数码管D段
 290   2            LEDRAM[19] |= 0x10;  //低速 ,  童锁按键
 291   2            //数码管C段
 292   2            LEDRAM[20] &= ~0x10;  //智能, 定时按键
 293   2          break;
 294   2          case FAN_SPEED_MIDDLE:
 295   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 296   2            //数码管E段
 297   2            LEDRAM[18] |= 0x10;   //0x10- 中速 , 0x08 - 模式按键
 298   2            //数码管D段
 299   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 300   2            //数码管C段
 301   2            LEDRAM[20] &= ~0x10;  //智能, 定时按键
 302   2          break;
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 6   

 303   2          case FAN_SPEED_HIGH:
 304   2            LEDRAM[17] |= 0x10;   //0x10- 高速 和 0x08-负离子按键
 305   2            //数码管E段
 306   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 307   2            //数码管D段
 308   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 309   2            //数码管C段
 310   2            LEDRAM[20] &= ~0x10;  //智能, 定时按键
 311   2          break;
 312   2          default:
 313   2            LEDRAM[17] &= ~0x10;   //0x10- 高速 和 0x08-负离子按键
 314   2            //数码管E段
 315   2            LEDRAM[18] &= ~0x10;   //0x10- 中速 , 0x08 - 模式按键
 316   2            //数码管D段
 317   2            LEDRAM[19] &= ~0x10;  //低速 ,  童锁按键
 318   2            //数码管C段
 319   2            LEDRAM[20] |= 0x10;  //智能, 定时按键
 320   2          break;
 321   2        }
 322   1      }
 323          
 324          void led_display_bcd(unsigned char bcd_value, unsigned char digit)
 325          //digit, 第7位是百位, 6位是10位, 5位是个位
 326          {
 327   1        switch(bcd_value)
 328   1        {
 329   2          case 0:
 330   2            LEDRAM[15] &= (~(1<<digit));
 331   2            //数码管g段
 332   2            LEDRAM[16] |= (1<<digit);  //  
 333   2            //数码管F段
 334   2            LEDRAM[17] |= (1<<digit);   //
 335   2            //数码管E段
 336   2            LEDRAM[18] |= (1<<digit);   //
 337   2            //数码管D段
 338   2            LEDRAM[19] |= (1<<digit);  //
 339   2            //数码管C段
 340   2            LEDRAM[20] |= (1<<digit);  //
 341   2            //数码管B段
 342   2            LEDRAM[21] |= (1<<digit);  //
 343   2            //数码管A段
 344   2          break;
 345   2          case 1:
 346   2            LEDRAM[15] &= (~(1<<digit));
 347   2            //数码管g段
 348   2            LEDRAM[16] &= (~(1<<digit));  //  
 349   2            //数码管F段
 350   2            LEDRAM[17] &= (~(1<<digit));  //
 351   2            //数码管E段
 352   2            LEDRAM[18] &= (~(1<<digit));  //
 353   2            //数码管D段
 354   2            LEDRAM[19] |= (1<<digit);  //
 355   2            //数码管C段
 356   2            LEDRAM[20] |= (1<<digit);  //
 357   2            //数码管B段
 358   2            LEDRAM[21] &= (~(1<<digit));  //
 359   2            //数码管A段
 360   2          break;
 361   2          case 2:
 362   2            LEDRAM[15] |= (1<<digit);
 363   2            //数码管g段
 364   2            LEDRAM[16] &= (~(1<<digit));  //  
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 7   

 365   2            //数码管F段
 366   2            LEDRAM[17] |= (1<<digit);   //
 367   2            //数码管E段
 368   2            LEDRAM[18] |= (1<<digit);   //
 369   2            //数码管D段
 370   2            LEDRAM[19] &= ~(1<<digit);  //
 371   2            //数码管C段
 372   2            LEDRAM[20] |= (1<<digit);  //
 373   2            //数码管B段
 374   2            LEDRAM[21] |= (1<<digit);  //
 375   2            //数码管A段
 376   2          break;
 377   2          case 3:
 378   2            LEDRAM[15] |= (1<<digit);
 379   2            //数码管g段
 380   2            LEDRAM[16] &= (~(1<<digit)) ; //  
 381   2            //数码管F段
 382   2            LEDRAM[17] &= ~(1<<digit);   //
 383   2            //数码管E段
 384   2            LEDRAM[18] |= (1<<digit);   //
 385   2            //数码管D段
 386   2            LEDRAM[19] |= (1<<digit);  //
 387   2            //数码管C段
 388   2            LEDRAM[20] |= (1<<digit);  //
 389   2            //数码管B段
 390   2            LEDRAM[21] |= (1<<digit);  //
 391   2            //数码管A段
 392   2          break;
 393   2          case 4:
 394   2            LEDRAM[15] |= (1<<digit);
 395   2            //数码管g段
 396   2            LEDRAM[16] |= (1<<digit);  //  
 397   2            //数码管F段
 398   2            LEDRAM[17] &= ~(1<<digit);   //
 399   2            //数码管E段
 400   2            LEDRAM[18] &= ~(1<<digit);   //
 401   2            //数码管D段
 402   2            LEDRAM[19] |= (1<<digit);  //
 403   2            //数码管C段
 404   2            LEDRAM[20] |= (1<<digit);  //
 405   2            //数码管B段
 406   2            LEDRAM[21] &= ~(1<<digit);  //
 407   2            //数码管A段
 408   2          break;
 409   2          case 5:
 410   2            LEDRAM[15] |= (1<<digit);
 411   2            //数码管g段
 412   2            LEDRAM[16] |= (1<<digit);  //  
 413   2            //数码管F段
 414   2            LEDRAM[17] &= ~(1<<digit);   //
 415   2            //数码管E段
 416   2            LEDRAM[18] |= (1<<digit);   //
 417   2            //数码管D段
 418   2            LEDRAM[19] |= (1<<digit);  //
 419   2            //数码管C段
 420   2            LEDRAM[20] &= ~(1<<digit);  //
 421   2            //数码管B段
 422   2            LEDRAM[21] |= (1<<digit);  //
 423   2            //数码管A段
 424   2          break;
 425   2          case 6:
 426   2            LEDRAM[15] |= (1<<digit);
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 8   

 427   2            //数码管g段
 428   2            LEDRAM[16] |= (1<<digit);  //  
 429   2            //数码管F段
 430   2            LEDRAM[17] |= (1<<digit);   //
 431   2            //数码管E段
 432   2            LEDRAM[18] |= (1<<digit);   //
 433   2            //数码管D段
 434   2            LEDRAM[19] |= (1<<digit);  //
 435   2            //数码管C段
 436   2            LEDRAM[20] &= ~(1<<digit);  //
 437   2            //数码管B段
 438   2            LEDRAM[21] |= (1<<digit);  //
 439   2            //数码管A段
 440   2          break;
 441   2          case 7:
 442   2            LEDRAM[15] &= ~(1<<digit);
 443   2            //数码管g段
 444   2            LEDRAM[16] &= ~(1<<digit);  //  
 445   2            //数码管F段
 446   2            LEDRAM[17] &= ~(1<<digit);   //
 447   2            //数码管E段
 448   2            LEDRAM[18] &= ~(1<<digit);   //
 449   2            //数码管D段
 450   2            LEDRAM[19] |= (1<<digit);  //
 451   2            //数码管C段
 452   2            LEDRAM[20] |= (1<<digit);  //
 453   2            //数码管B段
 454   2            LEDRAM[21] |= (1<<digit);  //
 455   2            //数码管A段
 456   2          break;
 457   2          case 8:
 458   2            LEDRAM[15] |= (1<<digit);
 459   2            //数码管g段
 460   2            LEDRAM[16] |= (1<<digit);  //  
 461   2            //数码管F段
 462   2            LEDRAM[17] |= (1<<digit);   //
 463   2            //数码管E段
 464   2            LEDRAM[18] |= (1<<digit);   //
 465   2            //数码管D段
 466   2            LEDRAM[19] |= (1<<digit);  //
 467   2            //数码管C段
 468   2            LEDRAM[20] |= (1<<digit);  //
 469   2            //数码管B段
 470   2            LEDRAM[21] |= (1<<digit);  //
 471   2            //数码管A段
 472   2          break;
 473   2          case 9:
 474   2            LEDRAM[15] |= (1<<digit);
 475   2            //数码管g段
 476   2            LEDRAM[16] |= (1<<digit);  //  
 477   2            //数码管F段
 478   2            LEDRAM[17] &= ~(1<<digit);   //
 479   2            //数码管E段
 480   2            LEDRAM[18] |= (1<<digit);   //
 481   2            //数码管D段
 482   2            LEDRAM[19] |= (1<<digit);  //
 483   2            //数码管C段
 484   2            LEDRAM[20] |= (1<<digit);  //
 485   2            //数码管B段
 486   2            LEDRAM[21] |= (1<<digit);  //
 487   2            //数码管A段
 488   2          break;
C51 COMPILER V9.52.0.0   LED                                                               10/07/2019 23:19:30 PAGE 9   

 489   2          default:
 490   2          break;        
 491   2        }
 492   1      }
 493          
 494          
 495          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1271    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
