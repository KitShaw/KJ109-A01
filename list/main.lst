C51 COMPILER V9.52.0.0   MAIN                                                              10/02/2019 23:05:10 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\main.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\main.
                    -lst) TABS(2) OBJECT(.\obj\main.obj)

line level    source

   1           //************************************************************
   2          //  Copyright (c) 厦门市凯杰斯科技有限公司
   3          //  文件名称  : main.c
   4          //  作者    : 
   5          //  模块功能  : 
   6          //  最后更正日期:
   7          //  版本    : 
   8          //              :  
   9          //*************************************************************
  10          #include "inc\SC92F844X_C.h"
  11          #include "inc\data_type.h"
  12          #include "lib\SensorMethod.h"
  13          #include "led.h"
  14          #include "fan.h"
  15          #include "key.h"
  16          #include "eeprom.h"
  17          #include "filter.h"
  18          //#include "IAP.h"
  19          #include "ion.h"
  20          #include "dust.h"
  21          //#include "display.h"
  22          
  23          // KJ60F-A3是SC92F8372单片机加自己的板子, 和原样的板子相比改了,LED改成6个口各单独控制一个LED, 
  24          
  25          //*****************全局变量区***************************************************
  26          
  27          INT8U  Timercount = 0;      //定时器计数
  28          BOOL   TimerFlag_1ms = 0;   //定时器1MS标志
  29          
  30          //unsigned char power_status = POWER_OFF_STATUS;
  31          unsigned char led_level = 0;
  32          unsigned char speed_level = 0;
  33          unsigned char task_1s_count;
  34          unsigned char task_1s_flag;
  35          
  36          unsigned char task_100ms_count;
  37          unsigned char task_100ms_flag;
  38          unsigned char task_10ms_count;
  39          unsigned char task_10ms_flag;
  40          unsigned char task_1ms_count;
  41          unsigned char task_1ms_flag;
  42          
  43          void task_1ms(void);
  44          void task_10ms(void);
  45          void task_100ms(void);
  46          void task_1s(void);
  47          
  48          
  49          
  50           /**************************************************
  51          *函数名称：void TimerInit(void) 
  52          *函数功能：定时器初始化
  53          *入口参数：void
  54          *出口参数：void
C51 COMPILER V9.52.0.0   MAIN                                                              10/02/2019 23:05:10 PAGE 2   

  55          **************************************************/
  56          void TimerInit(void)
  57          {
  58   1      //  TMCON |= 1;   //bit0: 0为FOSC/12,1为FOSO
  59   1      
  60   1      //  TMOD = TMOD&0xf0;           //设置定时0，工作方式0
  61   1      //  TMOD = TMOD|0x00;
  62   1      //  TH0=31;  ///(8192-80)/256 = 31.6875;            //1000*1=1000us ,1MS
  63   1      //  TL0=176;         //(8192-80)%256 = 176;
  64   1      //  //TH0 = 800;
  65   1      //  //TL0 = 800;
  66   1      //  TF0 = 0;                //清中断标志
  67   1      //  TR0=0;                //关定时器0
  68   1      //    ET0=1;                //使能定时器0中断
  69   1      //  TR0=1;
  70   1        
  71   1        TMCON = 0X07;    //------111 ;Timer0、Tiemr1和Tiemr2选择时钟Fsys
  72   1        
  73   1        //T0设置
  74   1        TMOD |= 0x01;                 //0000 0001;Timer0设置工作方式1
  75   1        TL0 = (65536 - 1600)%256;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;
  76   1        TH0 = (65536 - 1600)/256;
  77   1        TR0 = 0;
  78   1        ET0 = 1;//定时器0允许
  79   1        TR0 = 1;//打开定时器0
  80   1      }
  81          
  82          /**************************************************
  83          *函数名称：void timer0()interrupt 1 
  84          *函数功能：定时器中断服务函数
  85          *入口参数：void
  86          *出口参数：void 
  87          **************************************************/
  88          void timer0()interrupt 1
  89          {
  90   1        //TH0 = (8192-1000)/32;             //2000*1/4us=500us
  91   1        //TL0 = (8192-1000)%32; 
  92   1        //TH0=31;//31;             //(8192-80)/256;             //1000*1=1000us ,1MS
  93   1        //TL0=176;                //(8192-80)%256;
  94   1        TL0 = 192; //(65536 - 1600)%256 = 192;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;
  95   1        TH0 = 249; //(65536 - 1600)/256 = 249;
  96   1      //  TimerFlag_1ms = 1;  
  97   1          P52=~P52;
  98   1        
  99   1        task_1ms_flag = 1;
 100   1      }
 101           /**************************************************
 102          *函数名称：void  Sys_Init(void) 
 103          *函数功能：系统初始化
 104          *入口参数：void
 105          *出口参数：void  
 106          **************************************************/
 107          void  Sys_Init(void)
 108          { 
 109   1        WDTCON  = 0x10;           //1--1 -- 00    开WDT,WDT清0,WDT 524.288ms溢出;烧录时，可Code Option选择ENWDT
 110   1        //TK对应的IO设置为强推挽输出1
 111   1        
 112   1        P1CON |= (1<<0) | (1<<4) | (1<<5);                //P10, P14, P15是触摸脚
 113   1        P3CON |= (1<<0) | (1<<1) | (1<<20);
 114   1        led_init();
 115   1        //display_init();
 116   1        dust_init();
C51 COMPILER V9.52.0.0   MAIN                                                              10/02/2019 23:05:10 PAGE 3   

 117   1        EA = 1;           //开总中断  
 118   1          TimerInit();        //定时器初始化
 119   1        fan_init();
 120   1        ion_init();
 121   1        power_off();
 122   1      }
 123          void task_1ms(void)
 124          {
 125   1        //filter_task();
 126   1        key_task(); 
 127   1        if(++task_10ms_count>=9) {task_10ms_count = 0; task_10ms_flag = 1;}
 128   1      }
 129          
 130          void task_10ms(void)
 131          {
 132   1        //filter_task();
 133   1        
 134   1        Sys_Scan();   
 135   1        led_task();
 136   1        if(++task_100ms_count>=10){task_100ms_count = 0; task_100ms_flag = 1;}
 137   1        //P52=~P52;
 138   1      }
 139          
 140          void task_100ms(void)
 141          {
 142   1        if(++task_1s_count>=10){task_1s_count = 0; task_1s_flag = 1; }
 143   1        filter_task();
 144   1        dust_task();
 145   1        
 146   1      }
 147          
 148          void task_1s(void)
 149          {
 150   1        //filter_task();
 151   1        //P52=~P52;
 152   1      }
 153          
 154          /**************************************************
 155          *函数名称：void main(void)                  
 156          *函数功能：主函数
 157          *入口参数：void
 158          *出口参数：void  
 159          **************************************************/
 160          void main(void)
 161          {     
 162   1        Sys_Init();
 163   1        
 164   1        //触控按键初始化
 165   1        TouchKeyInit(); 
 166   1        key_init();
 167   1        //fan_init();
 168   1        eeprom_init();
 169   1      
 170   1        filter_init();
 171   1        //ion_init();
 172   1        
 173   1        while(1)
 174   1        {
 175   2           WDTCON  = 0x10;     
 176   2            if(1 == task_1ms_flag) { task_1ms_flag = 0; task_1ms();}
 177   2            if(1 == task_10ms_flag) { task_10ms_flag = 0; task_10ms();}
 178   2            if(1 == task_100ms_flag) {task_100ms_flag = 0; task_100ms(); }
C51 COMPILER V9.52.0.0   MAIN                                                              10/02/2019 23:05:10 PAGE 4   

 179   2            if(1 == task_1s_flag) {task_1s_flag = 0; task_1s();}
 180   2        } 
 181   1      }
 182          
 183          
 184          /**************************************************
 185          *函数名称：void timer1()interrupt 1 
 186          *函数功能：定时器中断服务函数
 187          *入口参数：void
 188          *出口参数：void 
 189          **************************************************/
 190          //void timer1()interrupt 3
 191          //{
 192          //  TH0 = (8192-1000)/32;             //2000*1/4us=500us
 193          //  TL0 = (8192-1000)%32; 
 194          //  TimerFlag_1ms = 1;  
 195          //    P52=~P52;
 196          //}
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
