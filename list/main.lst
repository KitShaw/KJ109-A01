C51 COMPILER V9.52.0.0   MAIN                                                              10/04/2019 17:47:05 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\main.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\main.
                    -lst) TABS(2) OBJECT(.\obj\main.obj)

line level    source

   1           //************************************************************
   2          //  Copyright (c) 厦门市凯杰斯科技有限公司
   3          //  文件名称  : main.c
   4          //  作者    : 
   5          //  模块功能  : 
   6          //  最后更正日期:
   7          //  版本    : 
   8          //              :  
   9          //*************************************************************
  10          #include "inc\SC92F844X_C.h"
  11          #include "inc\data_type.h"
  12          #include "lib\SensorMethod.h"
  13          #include "led.h"
  14          #include "fan.h"
  15          #include "key.h"
  16          #include "eeprom.h"
  17          #include "filter.h"
  18          //#include "IAP.h"
  19          #include "ion.h"
  20          #include "dust.h"
  21          //#include "display.h"
  22          
  23          // KJ60F-A3是SC92F8372单片机加自己的板子, 和原样的板子相比改了,LED改成6个口各单独控制一个LED, 
  24          
  25          //*****************全局变量区***************************************************
  26          
  27          INT8U  Timercount = 0;      //定时器计数
  28          BOOL   TimerFlag_1ms = 0;   //定时器1MS标志
  29          
  30          //unsigned char power_status = POWER_OFF_STATUS;
  31          //unsigned char led_level = 0;
  32          //unsigned char speed_level = 0;
  33          unsigned int fan_count_1s;
  34          unsigned char task_1s_count;
  35          unsigned char task_1s_flag;
  36          
  37          unsigned char task_100ms_count;
  38          unsigned char task_100ms_flag;
  39          unsigned char task_10ms_count;
  40          unsigned char task_10ms_flag;
  41          unsigned char task_1ms_count;
  42          unsigned char task_1ms_flag;
  43          unsigned char dust_count;
  44          
  45          void task_1ms(void);
  46          void task_10ms(void);
  47          void task_100ms(void);
  48          void task_1s(void);
  49          void timer1_start(void);
  50          
  51          
  52          
  53          
  54           /**************************************************
C51 COMPILER V9.52.0.0   MAIN                                                              10/04/2019 17:47:05 PAGE 2   

  55          *函数名称：void TimerInit(void) 
  56          *函数功能：定时器初始化
  57          *入口参数：void
  58          *出口参数：void
  59          **************************************************/
  60          void TimerInit(void)
  61          {
  62   1      //  TMCON |= 1;   //bit0: 0为FOSC/12,1为FOSO
  63   1      
  64   1      //  TMOD = TMOD&0xf0;           //设置定时0，工作方式0
  65   1      //  TMOD = TMOD|0x00;
  66   1      //  TH0=31;  ///(8192-80)/256 = 31.6875;            //1000*1=1000us ,1MS
  67   1      //  TL0=176;         //(8192-80)%256 = 176;
  68   1      //  //TH0 = 800;
  69   1      //  //TL0 = 800;
  70   1      //  TF0 = 0;                //清中断标志
  71   1      //  TR0=0;                //关定时器0
  72   1      //    ET0=1;                //使能定时器0中断
  73   1      //  TR0=1;
  74   1        
  75   1        TMCON |= 0X02;
  76   1        TMOD |= 0x10;            
  77   1        TL1 = (65536 - 1600)%256;  
  78   1        TH1 = (65536 - 1600)/256; 
  79   1        TR1 = 0;
  80   1        ET1 = 1;//
  81   1        
  82   1        TMCON |= 0X01;    //------111 ;Timer0、Tiemr1和Tiemr2选择时钟Fsys
  83   1        
  84   1        
  85   1        //T0设置
  86   1        TMOD |= 0x01;                 //0000 0001;Timer0设置工作方式1
  87   1        TL0 = (65536 - 1600)%256;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;
  88   1        TH0 = (65536 - 1600)/256;
  89   1        TR0 = 0;
  90   1        ET0 = 1;//定时器0允许
  91   1        TR0 = 1;//打开定时器0
  92   1      
  93   1          //IP |= (1<<1) | (1<<5);      //定时1, 和0高优先级
  94   1          IP &= ~((1<<1) | (1<<5));      //定时1, 和0高优先级
  95   1      }
  96          
  97          void timer1_start(void)
  98          {
  99   1        TL1 = (65536 - 4480)%256;    //240s
 100   1        TH1 = (65536 - 4480)/256;    //236.9375
 101   1        TR1 = 1;
 102   1      }
 103          /**************************************************
 104          *函数名称：void timer0()interrupt 1 
 105          *函数功能：定时器中断服务函数
 106          *入口参数：void
 107          *出口参数：void 
 108          **************************************************/
 109          void timer0()interrupt 1
 110          {
 111   1        TL0 = 50; //(65536 - 1600)%256 = 192;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;
 112   1        TH0 = 250; //(65536 - 1600)/256 = 249;
 113   1        if( dust_count == 4) DUST_PIN = 1;
 114   1        else if(dust_count >= 100){
 115   2          DUST_PIN = 0; 
 116   2          dust_count = 0;
C51 COMPILER V9.52.0.0   MAIN                                                              10/04/2019 17:47:05 PAGE 3   

 117   2          timer1_start();   
 118   2        }
 119   1        dust_count++;
 120   1        if(++task_1ms_count >= 10) {task_1ms_flag = 1; task_1ms_count = 0;}
 121   1        if(++fan_count_1s >= 10000) { fan_count_1s = 0; store_fan_return_pulse();}  //电机计数1秒的脉冲用
 122   1      }
 123           /**************************************************
 124          *函数名称：void  Sys_Init(void) 
 125          *函数功能：系统初始化
 126          *入口参数：void
 127          *出口参数：void  
 128          **************************************************/
 129          void  Sys_Init(void)
 130          { 
 131   1        WDTCON  = 0x10;           //1--1 -- 00    开WDT,WDT清0,WDT 524.288ms溢出;烧录时，可Code Option选择ENWDT
 132   1        //TK对应的IO设置为强推挽输出1
 133   1        
 134   1        P1CON |= (1<<0) | (1<<4) | (1<<5);                //P10, P14, P15是触摸脚
 135   1        P3CON |= (1<<0) | (1<<1) | (1<<20);
 136   1        led_init();
 137   1        //display_init();
 138   1        dust_init();
 139   1        EA = 1;           //开总中断  
 140   1          TimerInit();        //定时器初始化
 141   1        fan_init();
 142   1        ion_init();
 143   1        //触控按键初始化
 144   1        TouchKeyInit(); 
 145   1        key_init(); 
 146   1        eeprom_init();
 147   1        filter_init();
 148   1        power_on();
 149   1      }
 150          void task_1ms(void)
 151          {
 152   1        //filter_task();
 153   1        key_task(); 
 154   1        if(++task_10ms_count>=10) {task_10ms_count = 0; task_10ms_flag = 1;}
 155   1        //P52=~P52;
 156   1      }
 157          
 158          void task_10ms(void)
 159          {
 160   1        //filter_task();
 161   1        
 162   1        Sys_Scan();   
 163   1        led_task();
 164   1        if(++task_100ms_count>=10){task_100ms_count = 0; task_100ms_flag = 1;}
 165   1        //P52=~P52;
 166   1        dust_task();
 167   1        
 168   1      }
 169          
 170          void task_100ms(void)
 171          {
 172   1        if(++task_1s_count>=10){task_1s_count = 0; task_1s_flag = 1; }
 173   1        filter_task();
 174   1        fan_task();
 175   1      }
 176          
 177          void task_1s(void)
 178          {
C51 COMPILER V9.52.0.0   MAIN                                                              10/04/2019 17:47:05 PAGE 4   

 179   1        //filter_task();
 180   1        //P52=~P52;
 181   1      }
 182          
 183          /**************************************************
 184          *函数名称：void main(void)                  
 185          *函数功能：主函数
 186          *入口参数：void
 187          *出口参数：void  
 188          **************************************************/
 189          void main(void)
 190          {     
 191   1        Sys_Init();
 192   1        //ion_init();
 193   1        //DUST_PWR_PIN = 0;
 194   1        while(1)
 195   1        {
 196   2           WDTCON  = 0x10;     
 197   2            if(1 == task_1ms_flag) { task_1ms_flag = 0; task_1ms();}
 198   2            if(1 == task_10ms_flag) { task_10ms_flag = 0; task_10ms();}
 199   2            if(1 == task_100ms_flag) {task_100ms_flag = 0; task_100ms(); }
 200   2            if(1 == task_1s_flag) {task_1s_flag = 0; task_1s();}
 201   2        } 
 202   1      }
 203          
 204          
 205          /**************************************************
 206          *函数名称：void timer1()interrupt 1 
 207          *函数功能：定时器中断服务函数
 208          *入口参数：void
 209          *出口参数：void 
 210          **************************************************/
 211          void timer1()interrupt 3
 212          {
 213   1        TR1 = 0;
 214   1        adc_start();
 215   1        //P52 =~P52;
 216   1      }
 217          
 218          
 219          
 220          
 221          
 222          
 223          
 224          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
