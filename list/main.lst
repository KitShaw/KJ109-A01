C51 COMPILER V9.52.0.0   MAIN                                                              10/05/2019 12:34:29 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE src\main.c BROWSE INCDIR(.\inc;.\lib) DEBUG OBJECTEXTEND PRINT(.\list\main.
                    -lst) TABS(2) OBJECT(.\obj\main.obj)

line level    source

   1           //************************************************************
   2          //  Copyright (c) 厦门市凯杰斯科技有限公司
   3          //  文件名称  : main.c
   4          //  作者    : 
   5          //  模块功能  : 
   6          //  最后更正日期:
   7          //  版本    : 
   8          //              :  
   9          //*************************************************************
  10          #include "inc\SC92F844X_C.h"
  11          #include "inc\data_type.h"
  12          #include "lib\SensorMethod.h"
  13          #include "led.h"
  14          #include "fan.h"
  15          #include "key.h"
  16          #include "eeprom.h"
  17          #include "filter.h"
  18          //#include "IAP.h"
  19          #include "ion.h"
  20          #include "arom.h"
  21          #include "dust.h"
  22          #include "timing_off.h"
  23          //#include "display.h"
  24          
  25          // KJ60F-A3是SC92F8372单片机加自己的板子, 和原样的板子相比改了,LED改成6个口各单独控制一个LED, 
  26          
  27          //*****************全局变量区***************************************************
  28          
  29          INT8U  Timercount = 0;      //定时器计数
  30          BOOL   TimerFlag_1ms = 0;   //定时器1MS标志
  31          
  32          //unsigned char power_status = POWER_OFF_STATUS;
  33          //unsigned char led_level = 0;
  34          //unsigned char speed_level = 0;
  35          unsigned int fan_count_1s;
  36          unsigned char task_1s_count;
  37          unsigned char task_1s_flag;
  38          
  39          unsigned char task_100ms_count;
  40          unsigned char task_100ms_flag;
  41          unsigned char task_10ms_count;
  42          unsigned char task_10ms_flag;
  43          unsigned char task_1ms_count;
  44          unsigned char task_1ms_flag;
  45          unsigned char dust_count;
  46          
  47          void task_1ms(void);
  48          void task_10ms(void);
  49          void task_100ms(void);
  50          void task_1s(void);
  51          void timer1_start(void);
  52          
  53          
  54          
C51 COMPILER V9.52.0.0   MAIN                                                              10/05/2019 12:34:29 PAGE 2   

  55          
  56           /**************************************************
  57          *函数名称：void TimerInit(void) 
  58          *函数功能：定时器初始化
  59          *入口参数：void
  60          *出口参数：void
  61          **************************************************/
  62          void TimerInit(void)
  63          {
  64   1        TMCON |= 0X02;
  65   1        TMOD |= 0x10;            
  66   1        TL1 = (65536 - 1600)%256;  
  67   1        TH1 = (65536 - 1600)/256; 
  68   1        TR1 = 0;
  69   1        ET1 = 1;//
  70   1        
  71   1        TMCON |= 0X04;    //------111 ;Timer0、Tiemr1和Tiemr2选择时钟Fsys
  72   1        //T2设置
  73   1        T2MOD = 0x00;
  74   1        T2CON = 0x00;  //设置为16位重载寄存器
  75   1        RCAP2H = 250; //(65536-1600)/256;     //溢出时间：时钟为Fsys，则32000*（1/Fsys）=2ms;
  76   1        RCAP2L = 50; //(65536-1600)%256;
  77   1        TR2 = 0;
  78   1        ET2 = 1;//定时器2允许
  79   1        TR2 = 1;//打开定时器2 
  80   1        
  81   1        
  82   1        //T0设置
  83   1        TMOD |= 0x05;                 //0000 0001;Timer0设置工作方式1, 计数器工作方式
  84   1        //TL0 = (65536 - 1600)%256;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;
  85   1        //TH0 = (65536 - 1600)/256;
  86   1        //TR0 = 0;
  87   1        ET0 = 0;//关定时器0中断
  88   1        TR0 = 1;//打开定时器0
  89   1      
  90   1          //IP |= (1<<1) | (1<<5);      //定时1, 和0高优先级
  91   1          //IP &= ~((1<<1) | (1<<5));      //定时1, 和0高优先级
  92   1      }
  93          
  94          void timer1_start(void)
  95          {
  96   1        TL1 = (65536 - 4480)%256;    //240s
  97   1        TH1 = (65536 - 4480)/256;    //236.9375
  98   1        TR1 = 1;
  99   1      }
 100          /**************************************************
 101          *函数名称：void timer0()interrupt 1 
 102          *函数功能：定时器中断服务函数
 103          *入口参数：void
 104          *出口参数：void 
 105          **************************************************/
 106          void timer0()interrupt 1
 107          {
 108   1      /*
 109   1        TL0 = 50; //(65536 - 1600)%256 = 192;    //溢出时间：时钟为Fsys，则16000*（1/Fsys）=1ms;
 110   1        TH0 = 250; //(65536 - 1600)/256 = 249;
 111   1        if( dust_count == 4) DUST_PIN = 1;
 112   1        else if(dust_count >= 100){
 113   1          DUST_PIN = 0; 
 114   1          dust_count = 0;
 115   1          timer1_start();   
 116   1        }
C51 COMPILER V9.52.0.0   MAIN                                                              10/05/2019 12:34:29 PAGE 3   

 117   1        dust_count++;
 118   1        if(++task_1ms_count >= 10) {task_1ms_flag = 1; task_1ms_count = 0;}
 119   1        */
 120   1        //if(++fan_count_1s >= 10000) { fan_count_1s = 0; store_fan_return_pulse();}  //电机计数1秒的脉冲用
 121   1      }
 122          
 123          
 124           void Timer2Int(void) interrupt 5
 125           {  
 126   1        //RCAP2L = 50;
 127   1        //RCAP2H = 250;
 128   1        TF2 = 0;   //溢出清零
 129   1        //P52 = ~P52;
 130   1        if( dust_count == 4) DUST_PIN = 1;
 131   1        else if(dust_count >= 100){
 132   2          DUST_PIN = 0; 
 133   2          dust_count = 0;
 134   2          timer1_start();   
 135   2        }
 136   1        dust_count++;
 137   1        if(++task_1ms_count >= 10) {task_1ms_flag = 1; task_1ms_count = 0;}
 138   1        if(++fan_count_1s >= 10000)
 139   1        { 
 140   2          fan_count_1s = 0; 
 141   2          //store_fan_return_pulse((TH0<<8) + TL0); 
 142   2          store_fan_return_pulse();   
 143   2        }  //电机计数1秒的脉冲用
 144   1       }
 145          
 146           /**************************************************
 147          *函数名称：void  Sys_Init(void) 
 148          *函数功能：系统初始化
 149          *入口参数：void
 150          *出口参数：void  
 151          **************************************************/
 152          void  Sys_Init(void)
 153          { 
 154   1        WDTCON  = 0x10;           //1--1 -- 00    开WDT,WDT清0,WDT 524.288ms溢出;烧录时，可Code Option选择ENWDT
 155   1        //TK对应的IO设置为强推挽输出1
 156   1        
 157   1        P1CON |= (1<<0) | (1<<4) | (1<<5);                //P10, P14, P15是触摸脚
 158   1        P3CON |= (1<<0) | (1<<1) | (1<<20);
 159   1        led_init();
 160   1        //display_init();
 161   1        dust_init();
 162   1        EA = 1;           //开总中断  
 163   1          TimerInit();        //定时器初始化
 164   1        fan_init();
 165   1        ion_init();
 166   1        arom_init();
 167   1        //触控按键初始化
 168   1        TouchKeyInit(); 
 169   1        key_init(); 
 170   1        eeprom_init();
 171   1        filter_init();
 172   1        timing_off_init();
 173   1        power_on();
 174   1      }
 175          void task_1ms(void)
 176          {
 177   1        //filter_task();
 178   1        key_task(); 
C51 COMPILER V9.52.0.0   MAIN                                                              10/05/2019 12:34:29 PAGE 4   

 179   1        if(++task_10ms_count>=10) {task_10ms_count = 0; task_10ms_flag = 1;}
 180   1        //P52=~P52;
 181   1      }
 182          
 183          void task_10ms(void)
 184          {
 185   1        //filter_task();
 186   1        
 187   1        Sys_Scan();   
 188   1        if(++task_100ms_count>=10){task_100ms_count = 0; task_100ms_flag = 1;}
 189   1        //P52=~P52;
 190   1        dust_task();
 191   1        fan_task();
 192   1      }
 193          
 194          void task_100ms(void)
 195          {
 196   1        if(++task_1s_count>=10){task_1s_count = 0; task_1s_flag = 1; }
 197   1        filter_task();
 198   1        led_task();
 199   1      }
 200          
 201          void task_1s(void)
 202          {
 203   1        //filter_task();
 204   1        //P52=~P52;
 205   1        arom_task();
 206   1        timing_off_task();
 207   1      }
 208          
 209          /**************************************************
 210          *函数名称：void main(void)                  
 211          *函数功能：主函数
 212          *入口参数：void
 213          *出口参数：void  
 214          **************************************************/
 215          void main(void)
 216          {     
 217   1        Sys_Init();
 218   1        //ion_init();
 219   1        //DUST_PWR_PIN = 0;
 220   1        while(1)
 221   1        {
 222   2           WDTCON  = 0x10;     
 223   2            if(1 == task_1ms_flag) { task_1ms_flag = 0; task_1ms();}
 224   2            if(1 == task_10ms_flag) { task_10ms_flag = 0; task_10ms();}
 225   2            if(1 == task_100ms_flag) {task_100ms_flag = 0; task_100ms(); }
 226   2            if(1 == task_1s_flag) {task_1s_flag = 0; task_1s();}
 227   2            fan_handle();
 228   2        } 
 229   1      }
 230          
 231          
 232          /**************************************************
 233          *函数名称：void timer1()interrupt 1 
 234          *函数功能：定时器中断服务函数
 235          *入口参数：void
 236          *出口参数：void 
 237          **************************************************/
 238          void timer1()interrupt 3
 239          {
 240   1        TR1 = 0;
C51 COMPILER V9.52.0.0   MAIN                                                              10/05/2019 12:34:29 PAGE 5   

 241   1        adc_start();
 242   1        //P52 =~P52;
 243   1      }
 244          
 245          
 246          
 247          
 248          
 249          
 250          
 251          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    412    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
